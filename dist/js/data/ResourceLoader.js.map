{"version":3,"sources":["../../../src/js/data/ResourceLoader.js"],"names":["ResourceLoader","options","shouldBeAbstract","new","target","path","resolve","then","getPath","_startedLatch"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;;IAIMA,c;;;AAIF,4BAAYC,OAAZ,EAAqB;AAAA;;AAAA,oIACXA,OADW;;AAGjB,gCAAcC,gBAAd,CAA+BC,IAAIC,MAAnC,EAA2CJ,cAA3C;AAHiB;AAIpB;;AAED;;;;;;;;;6BAKKK,I,EAAM;AACP,mBAAO,mBACFC,OADE,GAEFC,IAFE,CAEG,YAAM;AACR,uBAAO,kBAAQC,OAAR,CAAgBH,IAAhB,CAAP;AACH,aAJE,CAAP;AAKH;;AAED;;;;;;;;;4BAMmB;AACf,mBAAO,KAAKI,aAAZ;AACH;;;;;;QAGGT,c,GAAAA,c;kBACOA,c","file":"ResourceLoader.js","sourcesContent":["import CoreObject from \"../CoreObject\";\r\nimport Utility from \"../Utility\";\r\nimport URI from \"urijs\";\r\nimport Preconditions from \"../Preconditions\";\r\nimport Promise from \"bluebird\";\r\n\r\n/**\r\n * @class ResourceLoader\r\n * @extends CoreObject\r\n */\r\nclass ResourceLoader extends CoreObject {\r\n\r\n    _startedLatch;\r\n\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        Preconditions.shouldBeAbstract(new.target, ResourceLoader);\r\n    }\r\n\r\n    /**\r\n     * @abstract\r\n     * @param {String|URI} path\r\n     * @return {Promise|Promise<Buffer>|Promise<String>}\r\n     */\r\n    load(path) {\r\n        return Promise\r\n            .resolve()\r\n            .then(() => {\r\n                return Utility.getPath(path);\r\n            });\r\n    }\r\n\r\n    /**\r\n     * @property\r\n     * @readonly\r\n     * @type {Promise}\r\n     * @return {Promise}\r\n     */\r\n    get startedLatch() {\r\n        return this._startedLatch;\r\n    }\r\n}\r\n\r\nexport {ResourceLoader};\r\nexport default ResourceLoader;"]}