{"version":3,"sources":["../../../src/js/data/ResourceLoader.js"],"names":["ResourceLoader","options","shouldBeAbstract","new","target","path","resolve","then","getPath","_startedLatch"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;;IAIMA,c;;;AAIF,4BAAYC,OAAZ,EAAqB;AAAA;;AAAA,oIACXA,OADW;;AAGjB,gCAAcC,gBAAd,CAA+BC,IAAIC,MAAnC,EAA2CJ,cAA3C;AAHiB;AAIpB;;AAED;;;;;;;;;6BAKKK,I,EAAM;AACP,mBAAO,mBACFC,OADE,GAEFC,IAFE,CAEG,YAAM;AACR,uBAAO,kBAAQC,OAAR,CAAgBH,IAAhB,CAAP;AACH,aAJE,CAAP;AAKH;;AAED;;;;;;;;;4BAMmB;AACf,mBAAO,KAAKI,aAAZ;AACH;;;;;;QAGGT,c,GAAAA,c;kBACOA,c","file":"ResourceLoader.js","sourcesContent":["import CoreObject from \"../CoreObject\";\nimport Utility from \"../Utility\";\nimport URI from \"urijs\";\nimport Preconditions from \"../Preconditions\";\nimport Promise from \"bluebird\";\n\n/**\n * @class ResourceLoader\n * @extends CoreObject\n */\nclass ResourceLoader extends CoreObject {\n\n    _startedLatch;\n\n    constructor(options) {\n        super(options);\n\n        Preconditions.shouldBeAbstract(new.target, ResourceLoader);\n    }\n\n    /**\n     * @abstract\n     * @param {String|URI} path\n     * @return {Promise|Promise<Buffer>|Promise<String>}\n     */\n    load(path) {\n        return Promise\n            .resolve()\n            .then(() => {\n                return Utility.getPath(path);\n            });\n    }\n\n    /**\n     * @property\n     * @readonly\n     * @type {Promise}\n     * @return {Promise}\n     */\n    get startedLatch() {\n        return this._startedLatch;\n    }\n}\n\nexport {ResourceLoader};\nexport default ResourceLoader;"]}