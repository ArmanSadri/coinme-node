{"version":3,"sources":["../../../src/js/data/SignTool.js"],"names":["SignTool","options","secret","take","issuer","arguments","_issuer","_secret","token","decodedObject","decode","complete","payload","requiresAudience","isTrue","audience","hasAudience","isBlank","aud","requiresIssuer","hasIssuer","iss","requiredSubject","subject","hasSubject","sub","verify","object","defaultValue","shouldBeObject","sign"],"mappings":"AAAA;;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;IAGMA,Q;;;AAEF;;;;;;AAMA,sBAAYC,OAAZ,EAAqB;AAAA;;AACjB,YAAIC,SAAS,kBAAQC,IAAR,CAAaF,OAAb,EAAsB,QAAtB,EAAgC,QAAhC,EAA0C,KAA1C,CAAb;AACA,YAAIG,SAAS,kBAAQD,IAAR,CAAaF,OAAb,EAAsB,QAAtB,EAAgC,QAAhC,EAA0C,KAA1C,CAAb;;AAFiB,yHAIRI,SAJQ;;AAMjB,cAAKC,OAAL,GAAeF,MAAf;AACA,cAAKG,OAAL,GAAeL,MAAf;AAPiB;AAQpB;;AAED;;;;;;;;;;;;AAoBA;;;;;;;;;wCASgBM,K,EAAOP,O,EAAS;AAC5B;;AAEA,gBAAIQ,gBAAgB,uBAAIC,MAAJ,CAAWF,KAAX,EAAkB;AAClCG,0BAAU;AADwB,aAAlB,CAApB;;AAIA;AACA,gBAAIC,UAAUH,cAAcG,OAA5B;;AAEA;AACI,oBAAIC,mBAAmB,kBAAQC,MAAR,CAAeb,QAAQc,QAAvB,CAAvB;AACA,oBAAIC,cAAc,CAAC,kBAAQC,OAAR,CAAgBL,QAAQM,GAAxB,CAAnB;;AAEA,oBAAIL,oBAAoB,CAACG,WAAzB,EAAsC;AAClC,2BAAO,IAAP;AACH;AACJ;;AAED;AACI,oBAAIG,iBAAiB,kBAAQL,MAAR,CAAeb,QAAQG,MAAvB,CAArB;AACA,oBAAIgB,YAAY,CAAC,kBAAQH,OAAR,CAAgBL,QAAQS,GAAxB,CAAjB;;AAEA,oBAAIF,kBAAkB,CAACC,SAAvB,EAAkC;AAC9B,2BAAO,IAAP;AACH;AACJ;;AAED;AACI,oBAAIE,kBAAkB,kBAAQR,MAAR,CAAeb,QAAQsB,OAAvB,CAAtB;AACA,oBAAIC,aAAa,CAAC,kBAAQP,OAAR,CAAgBL,QAAQa,GAAxB,CAAlB;;AAEA,oBAAIH,mBAAmB,CAACE,UAAxB,EAAoC;AAChC,2BAAO,IAAP;AACH;AACJ;;AAED;;AAEA,mBAAO,IAAP;AACH;;AAED;;;;;;;;;;;;6BASKhB,K,EAAOP,O,EAAS;AACjB,gBAAIC,SAAS,KAAKA,MAAlB;;AAEA;AACA,mCAAIwB,MAAJ,CAAWlB,KAAX,EAAkBN,MAAlB,EAA0BD,OAA1B;;AAEA,mBAAO,uBAAIS,MAAJ,CAAWF,KAAX,EAAkBN,MAAlB,CAAP;AACH;;AAED;;;;;;;;;;;;;;8BAWMyB,M,EAAQ1B,O,EAAS;AACnB,gBAAIC,SAAS,kBAAQ0B,YAAR,CAAqB3B,QAAQC,MAA7B,EAAqC,KAAKA,MAA1C,CAAb;;AAEA,oCAAc2B,cAAd,CAA6BF,MAA7B;;AAEA,mBAAO,uBAAIG,IAAJ,CAASH,MAAT,EAAiBzB,MAAjB,EAAyBD,OAAzB,CAAP;AACH;;;4BApGY;AACT,mBAAO,KAAKK,OAAZ;AACH;;AAED;;;;;;;;;4BAMa;AACT,mBAAO,KAAKC,OAAZ;AACH;;;;;;QA2FGP,Q,GAAAA,Q;kBACOA,Q","file":"SignTool.js","sourcesContent":["'use strict';\n\nimport jwt from \"jsonwebtoken\";\nimport Preconditions from \"../Preconditions\";\nimport Utility from '../Utility';\nimport CoreObject from '../CoreObject'\n\n/**\n * @class SignTool\n */\nclass SignTool extends CoreObject {\n\n    /**\n     *\n     * @param {Object} options\n     * @param {String} [options.secret]\n     * @param {String} [options.issuer]\n     */\n    constructor(options) {\n        let secret = Utility.take(options, 'secret', 'string', false);\n        let issuer = Utility.take(options, 'issuer', 'string', false);\n\n        super(...arguments);\n\n        this._issuer = issuer;\n        this._secret = secret;\n    }\n\n    /**\n     * @readonly\n     * @property\n     * @type {String}\n     * @return {String}\n     */\n    get issuer() {\n        return this._issuer;\n    }\n\n    /**\n     * @readonly\n     * @property\n     * @type {String}\n     * @returns {String}\n     */\n    get secret() {\n        return this._secret;\n    }\n\n    /**\n     *\n     * @param {String} token\n     * @param {Object} options\n     * @param {boolean|String} [options.issuer]\n     * @param {boolean|String} [options.subject]\n     * @param {boolean|String} [options.audience]\n     * @static\n     */\n    containsHeaders(token, options) {\n        // Will crash if not valid\n\n        let decodedObject = jwt.decode(token, {\n            complete: true\n        });\n\n        // let result = decodedObject.payload;\n        let payload = decodedObject.payload;\n\n        {\n            let requiresAudience = Utility.isTrue(options.audience);\n            let hasAudience = !Utility.isBlank(payload.aud);\n\n            if (requiresAudience && !hasAudience) {\n                return null;\n            }\n        }\n\n        {\n            let requiresIssuer = Utility.isTrue(options.issuer);\n            let hasIssuer = !Utility.isBlank(payload.iss);\n\n            if (requiresIssuer && !hasIssuer) {\n                return null;\n            }\n        }\n\n        {\n            let requiredSubject = Utility.isTrue(options.subject);\n            let hasSubject = !Utility.isBlank(payload.sub);\n\n            if (requiredSubject && !hasSubject) {\n                return null;\n            }\n        }\n\n        // TODO: verify the signature somehow?\n\n        return true;\n    }\n\n    /**\n     *\n     * @param {String} token\n     * @param {Object} options\n     * @param {String} [options.issuer]\n     * @param {String} [options.subject]\n     * @param {String} [options.audience]\n     * @static\n     */\n    read(token, options) {\n        let secret = this.secret;\n\n        // Will crash if not valid\n        jwt.verify(token, secret, options);\n\n        return jwt.decode(token, secret);\n    }\n\n    /**\n     *\n     * @param {Object} object\n     * @param {Object} options\n     * @param {String} [options.issuer]\n     * @param {String} [options.subject]\n     * @param {String} [options.audience]\n     * @param {String} [options.secret]\n     * @return {String} token\n     * @static\n     */\n    write(object, options) {\n        let secret = Utility.defaultValue(options.secret, this.secret);\n\n        Preconditions.shouldBeObject(object);\n\n        return jwt.sign(object, secret, options);\n    }\n}\n\nexport {SignTool};\nexport default SignTool;"]}