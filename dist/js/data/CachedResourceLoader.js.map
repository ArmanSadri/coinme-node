{"version":3,"sources":["../../../src/js/data/CachedResourceLoader.js"],"names":["CachedResourceLoader","options","cache","take","adapter","value","resourceLoader","_loader","_cache","_startedLatch","Promise","resolve","reject","promise","then","startedLatch","path","read","load"],"mappings":";;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;AAEA;;;;IAIMA,oB;;;AAEF;;;;;;AAMA,kCAAYC,OAAZ,EAAqB;AAAA;;AACjB;AACA;AACA,YAAIC,QAAQ,kBAAQC,IAAR,CAAaF,OAAb,EAAsB,OAAtB,EAA+B;AACvCG,mBADuC,mBAC/BC,KAD+B,EACxB;AACX,oBAAI,CAACA,KAAL,EAAY;AACRA,4BAAQ,2BAAR;AACH;;AAED,uBAAOA,KAAP;AACH;AAPsC,SAA/B,CAAZ;AASA;;AAEA;AACA,YAAIC,iBAAiB,kBAAQH,IAAR,CAAaF,OAAb,EAAsB,gBAAtB,4BAAwD,IAAxD,CAArB;;AAfiB,gJAiBXA,OAjBW;;AAmBjB,cAAKM,OAAL,GAAeD,cAAf;AACA,cAAKE,MAAL,GAAcN,KAAd;;AAEA,cAAKO,aAAL,GAAqB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAClD,gBAAIC,UAAUH,QAAQC,OAAR,EAAd;;AAEAE,sBAAUA,QAAQC,IAAR,CAAa;AAAA,uBAAMZ,MAAMa,YAAZ;AAAA,aAAb,CAAV;AACAF,sBAAUA,QAAQC,IAAR,CAAa;AAAA,uBAAMR,eAAeS,YAArB;AAAA,aAAb,CAAV;;AAEAJ,oBAAQE,OAAR;AACH,SAPoB,CAArB;AAtBiB;AA8BpB;;AAED;AACA;;;;;;;;;;;;AAoBA;;6BAEKG,I,EAAM;AACP,gBAAId,QAAQ,KAAKA,KAAjB;AACA,gBAAII,iBAAiB,KAAKA,cAA1B;;AAEA,mBAAO,iIACGU,IADH,EAEFF,IAFE,CAEG,WAAC,gBAAgBE,IAAjB,EAA0B;AAC5B,uBAAOd,MACFe,IADE,CACGD,IADH,EAEFF,IAFE,CAEG,UAACT,KAAD,EAAW;AACb,2BAAOA,SAASC,eAAeY,IAAf,CAAoBF,IAApB,CAAhB;AACH,iBAJE,CAAP;AAKH,aARE,CAAP;AASH;;;4BA7BoB;AACjB,mBAAO,KAAKT,OAAZ;AACH;;AAED;;;;;;;;;4BAMY;AACR,mBAAO,KAAKC,MAAZ;AACH;;;;;;QAoBGR,oB,GAAAA,oB;kBACOA,oB","file":"CachedResourceLoader.js","sourcesContent":["import Utility from \"../Utility\";\r\nimport URI from \"urijs\";\r\nimport {Cache, LocalFileCache} from \"../cache\";\r\nimport ResourceLoader from \"./ResourceLoader\";\r\n\r\n/**\r\n * @class CachedResourceLoader\r\n * @extends ResourceLoader\r\n */\r\nclass CachedResourceLoader extends ResourceLoader {\r\n\r\n    /**\r\n     *\r\n     * @param {Object} options\r\n     * @param {ResourceLoader} options.resourceLoader\r\n     * @param {Cache} [options.cache]\r\n     */\r\n    constructor(options) {\r\n        //region let cache\r\n        /** @type {Cache} */\r\n        let cache = Utility.take(options, 'cache', {\r\n            adapter(value) {\r\n                if (!value) {\r\n                    value = new LocalFileCache();\r\n                }\r\n\r\n                return value;\r\n            }\r\n        });\r\n        //endregion\r\n\r\n        /** @type {ResourceLoader} */\r\n        let resourceLoader = Utility.take(options, 'resourceLoader', ResourceLoader, true);\r\n\r\n        super(options);\r\n\r\n        this._loader = resourceLoader;\r\n        this._cache = cache;\r\n\r\n        this._startedLatch = new Promise((resolve, reject) => {\r\n            let promise = Promise.resolve();\r\n\r\n            promise = promise.then(() => cache.startedLatch);\r\n            promise = promise.then(() => resourceLoader.startedLatch);\r\n\r\n            resolve(promise);\r\n        });\r\n    }\r\n\r\n    //region getters/setters\r\n    /**\r\n     * @property\r\n     * @readonly\r\n     * @type {ResourceLoader}\r\n     * @return {ResourceLoader}\r\n     */\r\n    get resourceLoader() {\r\n        return this._loader;\r\n    }\r\n\r\n    /**\r\n     * @property\r\n     * @readonly\r\n     * @type {Cache}\r\n     * @return {Cache}\r\n     */\r\n    get cache() {\r\n        return this._cache;\r\n    }\r\n\r\n    //endregion\r\n\r\n    load(path) {\r\n        let cache = this.cache;\r\n        let resourceLoader = this.resourceLoader;\r\n\r\n        return super\r\n            .load(path)\r\n            .then((/**@type {URI}*/path) => {\r\n                return cache\r\n                    .read(path)\r\n                    .then((value) => {\r\n                        return value || resourceLoader.load(path);\r\n                    });\r\n            });\r\n    }\r\n}\r\n\r\nexport {CachedResourceLoader};\r\nexport default CachedResourceLoader;"]}