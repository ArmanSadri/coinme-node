{"version":3,"sources":["../../../src/js/data/Receipt.js"],"names":[],"mappings":"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","file":"Receipt.js","sourcesContent":["'use strict';\n\nimport CoreObject from \"../CoreObject\";\nimport Preconditions from \"../Preconditions\";\nimport Utility from \"../Utility\";\nimport {NotImplementedError} from \"../errors/NotImplementedError\";\nimport {Instant} from \"js-joda/dist/js-joda\";\nimport {Currency, USD, Money, Bitcoin} from \"../money\";\nimport {Address} from \"../Address\";\nimport Identity from \"./Identity\";\n\n//region EndpointType\nclass EndpointType extends CoreObject {\n\n    /**\n     *\n     * @param {String|Money} stringOrMoney\n     * @return {Money}\n     */\n    toMoney(stringOrMoney) {\n        if (!stringOrMoney) {\n            stringOrMoney = '0';\n        }\n\n        Currency.shouldBeCurrency(this.currency);\n\n        let money = Currency.toMoney(stringOrMoney, this.currency);\n\n        let currencyClass1 = this.currency.toClass();\n        let currencyClass2 = money.currency.toClass();\n\n        Preconditions.shouldBeClass(currencyClass2, currencyClass1);\n\n        return money;\n    }\n\n    /**\n     *\n     * @param {String|Address|URI|ReceiptEndpoint} stringOrAddressOrUri\n     * @return {Address}\n     */\n    toAddress(stringOrAddressOrUri) {\n        if (stringOrAddressOrUri instanceof ReceiptEndpoint) {\n            /**\n             * @type {ReceiptEndpoint}\n             */\n            let endpoint = stringOrAddressOrUri;\n\n            return endpoint.address;\n        }\n\n        let address = Address.toAddressWithDefaultScheme(stringOrAddressOrUri, this.name);\n\n        console.log('thing', this.name, address);\n\n        Preconditions.shouldBeInstance(address, Address, 'Wrong type');\n\n        Preconditions.shouldBeTrue(\n            Utility.isStringEqualIgnoreCase(address.resource, this.name),\n            `Wrong resource type. Actual:${this.name} Expected:${address.resource}`);\n\n        Preconditions.shouldBeDefined(address.valid);\n        Preconditions.shouldBeTrue(address.valid, 'Address is not valid: ' + address);\n\n        return address;\n    }\n\n    toJson() {\n        return super.toJson({\n            currency: Utility.optString(this.currency),\n            name: this.name\n        });\n    }\n\n    /**\n     * @return {Class<Currency>}\n     */\n    get currency() {\n        throw new NotImplementedError('type');\n    }\n\n    /**\n     * @return {String}\n     */\n    get name() {\n        throw new NotImplementedError('type');\n    }\n}\n\nclass KioskEndpointType extends EndpointType {\n\n    /**\n     * @return {Currency}\n     */\n    get currency() {\n        return USD;\n    }\n\n    /**\n     * @return {String}\n     */\n    get name() {\n        return 'kiosk'\n    }\n\n    static create(options) {\n        let fee = Utility.take(options, 'fee', {\n            validator: function (value) {\n                Preconditions.shouldBeNumber(value, 'Must be number');\n                Preconditions.shouldBeTrue(value < 1, 'Fee should be less than 1');\n\n                return value;\n            }\n        });\n\n        let id = Utility.take(options, 'id', {\n            type: 'String',\n            required: true\n        });\n\n        return new KioskEndpointType({\n            fee: fee,\n            id: id\n        });\n    }\n}\n\nclass WalletEndpointType extends EndpointType {\n\n\n    /**\n     * @return {Class<Currency>|Currency}\n     */\n    get currency() {\n        return Bitcoin;\n    }\n\n    /**\n     * @return {String}\n     */\n    get name() {\n        return 'bitcoin';\n    }\n}\n//endregion\n\nlet ENDPOINT_INSTANCE_KIOSK = new KioskEndpointType();\nlet ENDPOINT_INSTANCE_WALLET = new WalletEndpointType();\nlet endpointTypes = {};\n\nendpointTypes[ENDPOINT_INSTANCE_WALLET.name] = ENDPOINT_INSTANCE_WALLET;\nendpointTypes[ENDPOINT_INSTANCE_KIOSK.name] = ENDPOINT_INSTANCE_KIOSK;\n\nclass EndpointTypes {\n\n    static types = endpointTypes;\n\n    /**\n     * @return {KioskEndpointType}\n     */\n    static get KIOSK() {\n        return ENDPOINT_INSTANCE_KIOSK;\n    }\n\n    /**\n     * @return {WalletEndpointType}\n     */\n    static get WALLET() {\n        return ENDPOINT_INSTANCE_WALLET;\n    }\n\n    /**\n     * @param {Address|String|EndpointType} nameOrInstance\n     * @return {EndpointType}\n     */\n    static getEndpointTypeOrFail(nameOrInstance) {\n        if (Address.isInstance(nameOrInstance)) {\n            nameOrInstance = Preconditions.shouldNotBeBlank(nameOrInstance.resource, `Name suspiciously blank ${nameOrInstance}`);\n        } else if (EndpointType.isInstance(nameOrInstance)) {\n            return nameOrInstance;\n        } else if (Utility.isString(nameOrInstance)) {\n\n        } else {\n            throw new NotImplementedError(`Cannot work with ${nameOrInstance}`);\n        }\n\n        let type = EndpointTypes.types[nameOrInstance];\n\n        Preconditions.shouldBeInstance(type, EndpointType, `EndpointType not found with name: '${nameOrInstance}'`);\n\n        return type;\n    }\n}\n\nclass ReceiptEndpoint extends CoreObject {\n\n    //region fields\n    /**\n     * @type {Money}\n     */\n    _amount;\n\n    /**\n     * @type {Money}\n     */\n    _fee;\n\n    /**\n     * @type {Address}\n     */\n    _address;\n\n    /**\n     * @type {EndpointType}\n     */\n    _type;\n\n    /**\n     * @type {Instant}\n     */\n    _timestamp;\n    //endregion\n\n    /**\n     *\n     * @param {Object} options\n     * @param {Address|String} options.address\n     * @param {Money|String|Number|Big|BigJsLibrary.BigJS} options.amount\n     * @param {Money|String|Number|Big|BigJsLibrary.BigJS} [options.fee]\n     * @param {Instant|String|Number} options.timestamp If number, is assumed to be millis.\n     */\n    constructor(options) {\n        /**\n         * @type {Address}\n         */\n        let address = Address.toAddress(Utility.take(options, 'address', {\n            type: Address,\n            required: true,\n            adapter: Address.toAddressWithDefaultScheme\n        }));\n\n        /**\n         * @type {Instant}\n         */\n        let timestamp = Utility.take(options, 'timestamp', {\n            required: true,\n            validator: function (value) {\n                return value instanceof Instant;\n            }\n        });\n\n        /**\n         * @type {Money}\n         */\n        let amount = Utility.take(options, 'amount', Money, true);\n\n        let fee = Utility.take(options, 'fee', Money, false);\n\n        super(...arguments);\n\n        this._type = EndpointTypes.getEndpointTypeOrFail(address);\n        this._address = address;\n        this._amount = this.type.toMoney(amount);\n        this._fee = this.type.toMoney(fee);\n        this._timestamp = Utility.toDateTime(timestamp);\n    }\n\n    /**\n     * @type {Address}\n     */\n    get address() {\n        return this._address;\n    }\n\n    /**\n     * @type {EndpointType}\n     */\n    get type() {\n        return this._type;\n    }\n\n    /**\n     * @type {Money}\n     */\n    get amount() {\n        return this._amount;\n    }\n\n    /**\n     * @return {Money}\n     */\n    get fee() {\n        return this._fee;\n    }\n\n    toJson() {\n        return super.toJson({\n            currency: Utility.optString(this.type.currency),\n            fee: Utility.optString(Money.optValue(this.fee)),\n            amount: Utility.optJson(Money.optValue(this.amount)),\n            address: Utility.optString(this.address),\n        });\n    }\n}\n\nclass Receipt extends CoreObject {\n\n    /**\n     * @type Instant\n     */\n    _timestamp;\n\n    /**\n     * @type {ReceiptEndpoint}\n     */\n    _source;\n\n    /**\n     * @type {ReceiptEndpoint}\n     */\n    _destination;\n\n    /**\n     * @type {Identity}\n     */\n    _identity;\n\n    /**\n     * @param {Object} options\n     * @param {ReceiptEndpoint} options.source\n     * @param {ReceiptEndpoint} options.destination\n     * @param {Instant} options.timestamp\n     */\n    constructor(options) {\n        let source = Utility.take(options, 'source', ReceiptEndpoint, true);\n        let destination = Utility.take(options, 'destination', ReceiptEndpoint, true);\n        let identity = Utility.take(options, 'identity', Identity, true);\n        let timestamp = Utility.take(options, 'timestamp', {\n            required: true,\n            adapter: function(value) {\n                return Utility.optInstant(Utility.optDateTime(value));\n            },\n            validator: function (value) {\n                return value instanceof Instant;\n            }\n        });\n\n        super(...arguments);\n\n        this._timestamp = timestamp;\n        this._source = source;\n        this._destination = destination;\n        this._identity = identity;\n    }\n\n    /**\n     * @return {Instant}\n     */\n    get timestamp() {\n        return this._timestamp;\n    }\n\n    /**\n     * @type {ReceiptEndpoint}\n     */\n    get source() {\n        return this._source;\n    }\n\n    /**\n     * @type {ReceiptEndpoint}\n     */\n    get destination() {\n        return this._destination;\n    }\n\n    /**\n     * @return {Identity}\n     */\n    get identity() {\n        return this._identity;\n    }\n\n    toJson() {\n        return super.toJson({\n            identity: Utility.optString(this.identity),\n            timestamp: Utility.optString(this.timestamp),\n            source: Utility.optJson(this.source),\n            destination: Utility.optJson(this.destination)\n        });\n    }\n}\n\nclass ReceiptBuilder extends CoreObject {\n\n    constructor(options) {\n        super(...arguments);\n\n\n    }\n\n    from(kioskName, money) {\n\n    }\n\n    to() {\n\n    }\n\n    at() {\n\n    }\n\n}\n\nexport {KioskEndpointType};\nexport {WalletEndpointType};\nexport {ReceiptBuilder};\nexport {EndpointTypes};\nexport {EndpointType};\nexport {ReceiptEndpoint};\nexport {Receipt};\n\nexport default Receipt;\n\n\n"]}