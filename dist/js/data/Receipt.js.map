{"version":3,"sources":["../../../src/js/data/Receipt.js"],"names":[],"mappings":"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","file":"Receipt.js","sourcesContent":["'use strict';\r\n\r\nimport CoreObject from \"../CoreObject\";\r\nimport Preconditions from \"../Preconditions\";\r\nimport Utility from \"../Utility\";\r\nimport {NotImplementedError} from \"../errors/NotImplementedError\";\r\nimport {Instant} from \"js-joda/dist/js-joda\";\r\nimport {Currency, USD, Money, Bitcoin} from \"../money\";\r\nimport {Address} from \"../Address\";\r\nimport Identity from \"./Identity\";\r\n\r\n//region EndpointType\r\nclass EndpointType extends CoreObject {\r\n\r\n    /**\r\n     *\r\n     * @param {String|Money} stringOrMoney\r\n     * @return {Money}\r\n     */\r\n    toMoney(stringOrMoney) {\r\n        if (!stringOrMoney) {\r\n            stringOrMoney = '0';\r\n        }\r\n\r\n        Currency.shouldBeCurrency(this.currency);\r\n\r\n        let money = Currency.toMoney(stringOrMoney, this.currency);\r\n\r\n        let currencyClass1 = this.currency.toClass();\r\n        let currencyClass2 = money.currency.toClass();\r\n\r\n        Preconditions.shouldBeClass(currencyClass2, currencyClass1);\r\n\r\n        return money;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {String|Address|URI|ReceiptEndpoint} stringOrAddressOrUri\r\n     * @return {Address}\r\n     */\r\n    toAddress(stringOrAddressOrUri) {\r\n        if (stringOrAddressOrUri instanceof ReceiptEndpoint) {\r\n            /**\r\n             * @type {ReceiptEndpoint}\r\n             */\r\n            let endpoint = stringOrAddressOrUri;\r\n\r\n            return endpoint.address;\r\n        }\r\n\r\n        let address = Address.toAddressWithDefaultScheme(stringOrAddressOrUri, this.name);\r\n\r\n        console.log('thing', this.name, address);\r\n\r\n        Preconditions.shouldBeInstance(address, Address, 'Wrong type');\r\n\r\n        Preconditions.shouldBeTrue(\r\n            Utility.isStringEqualIgnoreCase(address.resource, this.name),\r\n            `Wrong resource type. Actual:${this.name} Expected:${address.resource}`);\r\n\r\n        Preconditions.shouldBeDefined(address.valid);\r\n        Preconditions.shouldBeTrue(address.valid, 'Address is not valid: ' + address);\r\n\r\n        return address;\r\n    }\r\n\r\n    toJson() {\r\n        return super.toJson({\r\n            currency: Utility.optString(this.currency),\r\n            name: this.name\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @return {Class<Currency>}\r\n     */\r\n    get currency() {\r\n        throw new NotImplementedError('type');\r\n    }\r\n\r\n    /**\r\n     * @return {String}\r\n     */\r\n    get name() {\r\n        throw new NotImplementedError('type');\r\n    }\r\n}\r\n\r\nclass KioskEndpointType extends EndpointType {\r\n\r\n    /**\r\n     * @return {Currency}\r\n     */\r\n    get currency() {\r\n        return USD;\r\n    }\r\n\r\n    /**\r\n     * @return {String}\r\n     */\r\n    get name() {\r\n        return 'kiosk'\r\n    }\r\n\r\n    static create(options) {\r\n        let fee = Utility.take(options, 'fee', {\r\n            validator: function (value) {\r\n                Preconditions.shouldBeNumber(value, 'Must be number');\r\n                Preconditions.shouldBeTrue(value < 1, 'Fee should be less than 1');\r\n\r\n                return value;\r\n            }\r\n        });\r\n\r\n        let id = Utility.take(options, 'id', {\r\n            type: 'String',\r\n            required: true\r\n        });\r\n\r\n        return new KioskEndpointType({\r\n            fee: fee,\r\n            id: id\r\n        });\r\n    }\r\n}\r\n\r\nclass WalletEndpointType extends EndpointType {\r\n\r\n\r\n    /**\r\n     * @return {Class<Currency>|Currency}\r\n     */\r\n    get currency() {\r\n        return Bitcoin;\r\n    }\r\n\r\n    /**\r\n     * @return {String}\r\n     */\r\n    get name() {\r\n        return 'bitcoin';\r\n    }\r\n}\r\n//endregion\r\n\r\nlet ENDPOINT_INSTANCE_KIOSK = new KioskEndpointType();\r\nlet ENDPOINT_INSTANCE_WALLET = new WalletEndpointType();\r\nlet endpointTypes = {};\r\n\r\nendpointTypes[ENDPOINT_INSTANCE_WALLET.name] = ENDPOINT_INSTANCE_WALLET;\r\nendpointTypes[ENDPOINT_INSTANCE_KIOSK.name] = ENDPOINT_INSTANCE_KIOSK;\r\n\r\nclass EndpointTypes {\r\n\r\n    static types = endpointTypes;\r\n\r\n    /**\r\n     * @return {KioskEndpointType}\r\n     */\r\n    static get KIOSK() {\r\n        return ENDPOINT_INSTANCE_KIOSK;\r\n    }\r\n\r\n    /**\r\n     * @return {WalletEndpointType}\r\n     */\r\n    static get WALLET() {\r\n        return ENDPOINT_INSTANCE_WALLET;\r\n    }\r\n\r\n    /**\r\n     * @param {Address|String|EndpointType} nameOrInstance\r\n     * @return {EndpointType}\r\n     */\r\n    static getEndpointTypeOrFail(nameOrInstance) {\r\n        if (Address.isInstance(nameOrInstance)) {\r\n            nameOrInstance = Preconditions.shouldNotBeBlank(nameOrInstance.resource, `Name suspiciously blank ${nameOrInstance}`);\r\n        } else if (EndpointType.isInstance(nameOrInstance)) {\r\n            return nameOrInstance;\r\n        } else if (Utility.isString(nameOrInstance)) {\r\n\r\n        } else {\r\n            throw new NotImplementedError(`Cannot work with ${nameOrInstance}`);\r\n        }\r\n\r\n        let type = EndpointTypes.types[nameOrInstance];\r\n\r\n        Preconditions.shouldBeInstance(type, EndpointType, `EndpointType not found with name: '${nameOrInstance}'`);\r\n\r\n        return type;\r\n    }\r\n}\r\n\r\nclass ReceiptEndpoint extends CoreObject {\r\n\r\n    //region fields\r\n    /**\r\n     * @type {Money}\r\n     */\r\n    _amount;\r\n\r\n    /**\r\n     * @type {Money}\r\n     */\r\n    _fee;\r\n\r\n    /**\r\n     * @type {Address}\r\n     */\r\n    _address;\r\n\r\n    /**\r\n     * @type {EndpointType}\r\n     */\r\n    _type;\r\n\r\n    /**\r\n     * @type {Instant}\r\n     */\r\n    _timestamp;\r\n    //endregion\r\n\r\n    /**\r\n     *\r\n     * @param {Object} options\r\n     * @param {Address|String} options.address\r\n     * @param {Money|String|Number|Big|BigJsLibrary.BigJS} options.amount\r\n     * @param {Money|String|Number|Big|BigJsLibrary.BigJS} [options.fee]\r\n     * @param {Instant|String|Number} options.timestamp If number, is assumed to be millis.\r\n     */\r\n    constructor(options) {\r\n        /**\r\n         * @type {Address}\r\n         */\r\n        let address = Address.toAddress(Utility.take(options, 'address', {\r\n            type: Address,\r\n            required: true,\r\n            adapter: Address.toAddressWithDefaultScheme\r\n        }));\r\n\r\n        /**\r\n         * @type {Instant}\r\n         */\r\n        let timestamp = Utility.take(options, 'timestamp', {\r\n            required: true,\r\n            validator: function (value) {\r\n                return value instanceof Instant;\r\n            }\r\n        });\r\n\r\n        /**\r\n         * @type {Money}\r\n         */\r\n        let amount = Utility.take(options, 'amount', Money, true);\r\n\r\n        let fee = Utility.take(options, 'fee', Money, false);\r\n\r\n        super(...arguments);\r\n\r\n        this._type = EndpointTypes.getEndpointTypeOrFail(address);\r\n        this._address = address;\r\n        this._amount = this.type.toMoney(amount);\r\n        this._fee = this.type.toMoney(fee);\r\n        this._timestamp = Utility.toDateTime(timestamp);\r\n    }\r\n\r\n    /**\r\n     * @type {Address}\r\n     */\r\n    get address() {\r\n        return this._address;\r\n    }\r\n\r\n    /**\r\n     * @type {EndpointType}\r\n     */\r\n    get type() {\r\n        return this._type;\r\n    }\r\n\r\n    /**\r\n     * @type {Money}\r\n     */\r\n    get amount() {\r\n        return this._amount;\r\n    }\r\n\r\n    /**\r\n     * @return {Money}\r\n     */\r\n    get fee() {\r\n        return this._fee;\r\n    }\r\n\r\n    toJson() {\r\n        return super.toJson({\r\n            currency: Utility.optString(this.type.currency),\r\n            fee: Utility.optString(Money.optValue(this.fee)),\r\n            amount: Utility.optJson(Money.optValue(this.amount)),\r\n            address: Utility.optString(this.address),\r\n        });\r\n    }\r\n}\r\n\r\nclass Receipt extends CoreObject {\r\n\r\n    /**\r\n     * @type Instant\r\n     */\r\n    _timestamp;\r\n\r\n    /**\r\n     * @type {ReceiptEndpoint}\r\n     */\r\n    _source;\r\n\r\n    /**\r\n     * @type {ReceiptEndpoint}\r\n     */\r\n    _destination;\r\n\r\n    /**\r\n     * @type {Identity}\r\n     */\r\n    _identity;\r\n\r\n    /**\r\n     * @param {Object} options\r\n     * @param {ReceiptEndpoint} options.source\r\n     * @param {ReceiptEndpoint} options.destination\r\n     * @param {Instant} options.timestamp\r\n     */\r\n    constructor(options) {\r\n        let source = Utility.take(options, 'source', ReceiptEndpoint, true);\r\n        let destination = Utility.take(options, 'destination', ReceiptEndpoint, true);\r\n        let identity = Utility.take(options, 'identity', Identity, true);\r\n        let timestamp = Utility.take(options, 'timestamp', {\r\n            required: true,\r\n            adapter: function(value) {\r\n                return Utility.optInstant(Utility.optDateTime(value));\r\n            },\r\n            validator: function (value) {\r\n                return value instanceof Instant;\r\n            }\r\n        });\r\n\r\n        super(...arguments);\r\n\r\n        this._timestamp = timestamp;\r\n        this._source = source;\r\n        this._destination = destination;\r\n        this._identity = identity;\r\n    }\r\n\r\n    /**\r\n     * @return {Instant}\r\n     */\r\n    get timestamp() {\r\n        return this._timestamp;\r\n    }\r\n\r\n    /**\r\n     * @type {ReceiptEndpoint}\r\n     */\r\n    get source() {\r\n        return this._source;\r\n    }\r\n\r\n    /**\r\n     * @type {ReceiptEndpoint}\r\n     */\r\n    get destination() {\r\n        return this._destination;\r\n    }\r\n\r\n    /**\r\n     * @return {Identity}\r\n     */\r\n    get identity() {\r\n        return this._identity;\r\n    }\r\n\r\n    toJson() {\r\n        return super.toJson({\r\n            identity: Utility.optString(this.identity),\r\n            timestamp: Utility.optString(this.timestamp),\r\n            source: Utility.optJson(this.source),\r\n            destination: Utility.optJson(this.destination)\r\n        });\r\n    }\r\n}\r\n\r\nclass ReceiptBuilder extends CoreObject {\r\n\r\n    constructor(options) {\r\n        super(...arguments);\r\n\r\n\r\n    }\r\n\r\n    from(kioskName, money) {\r\n\r\n    }\r\n\r\n    to() {\r\n\r\n    }\r\n\r\n    at() {\r\n\r\n    }\r\n\r\n}\r\n\r\nexport {KioskEndpointType};\r\nexport {WalletEndpointType};\r\nexport {ReceiptBuilder};\r\nexport {EndpointTypes};\r\nexport {EndpointType};\r\nexport {ReceiptEndpoint};\r\nexport {Receipt};\r\n\r\nexport default Receipt;\r\n\r\n\r\n"]}