{"version":3,"sources":["../../../src/js/data/UserExistenceToken.js"],"names":["UserExistenceToken","options","username","take","requiresNewPassword","type","defaultValue","required","usingTemporaryPassword","usingVerifiedEmail","usingEmail","emailToken","exists","arguments","_requiresNewPassword","_usingVerifiedEmail","_usingEmail","_usingTemporaryPassword","_emailToken","_exists","_username"],"mappings":"AAAA;;;;;;;;;;;AAEA;;;;AACA;;;;;;;;;;;;AAEA;;;;;;IAMMA,kB;;;AAEF;;;;;;;;;;;AAWA,gCAAYC,OAAZ,EAAqB;AAAA;;AACjB,YAAIC,WAAW,kBAAQC,IAAR,CAAaF,OAAb,EAAsB,UAAtB,EAAkC,QAAlC,EAA4C,IAA5C,CAAf;AACA,YAAIG,sBAAsB,kBAAQD,IAAR,CAAaF,OAAb,EAAsB,qBAAtB,EAA6C;AACnEI,kBAAM,SAD6D;AAEnEC,0BAAc,KAFqD;AAGnEC,sBAAU;AAHyD,SAA7C,CAA1B;AAKA,YAAIC,yBAAyB,kBAAQL,IAAR,CAAaF,OAAb,EAAsB,wBAAtB,EAAgD;AACzEI,kBAAM,SADmE;AAEzEC,0BAAc,KAF2D;AAGzEC,sBAAU;AAH+D,SAAhD,CAA7B;AAKA,YAAIE,qBAAqB,kBAAQN,IAAR,CAAaF,OAAb,EAAsB,oBAAtB,EAA4C;AACjEI,kBAAM,SAD2D;AAEjEC,0BAAc,KAFmD;AAGjEC,sBAAU;AAHuD,SAA5C,CAAzB;AAKA,YAAIG,aAAa,kBAAQP,IAAR,CAAaF,OAAb,EAAsB,YAAtB,EAAoC;AACjDI,kBAAM,SAD2C;AAEjDC,0BAAc,KAFmC;AAGjDC,sBAAU;AAHuC,SAApC,CAAjB;AAKA,YAAII,aAAa,kBAAQR,IAAR,CAAaF,OAAb,EAAsB,YAAtB,EAAoC,QAApC,EAA8C,KAA9C,CAAjB;AACA,YAAIW,SAAS,kBAAQT,IAAR,CAAaF,OAAb,EAAsB,QAAtB,EAAgC;AACzCI,kBAAM,SADmC;AAEzCC,0BAAc,KAF2B;AAGzCC,sBAAU;AAH+B,SAAhC,CAAb;;AAvBiB,6IA6BRM,SA7BQ;;AA+BjB,cAAKC,oBAAL,GAA4BV,mBAA5B;AACA,cAAKW,mBAAL,GAA2BN,kBAA3B;AACA,cAAKO,WAAL,GAAmBN,UAAnB;AACA,cAAKO,uBAAL,GAA+BT,sBAA/B;AACA,cAAKU,WAAL,GAAmBP,UAAnB;AACA,cAAKQ,OAAL,GAAeP,MAAf;AACA,cAAKQ,SAAL,GAAiBlB,QAAjB;AArCiB;AAsCpB;;AAED;;;;;;;;;;iCAsES;AACL,kJAAoB;AAChBA,0BAAU,KAAKA,QADC;AAEhBE,qCAAqB,KAAKA,mBAFV;AAGhBI,wCAAwB,KAAKA,sBAHb;AAIhBE,4BAAY,KAAKA,UAJD;AAKhBD,oCAAoB,KAAKA,kBALT;AAMhBE,4BAAY,KAAKA,UAND;AAOhBC,wBAAQ,KAAKA;AAPG,aAApB;AASH;;;4BA1EgB;AACb,mBAAO,KAAKM,WAAZ;AACH;;AAED;;;;;;;;;4BAMe;AACX,mBAAO,KAAKE,SAAZ;AACH;;AAED;;;;;;;;;4BAM0B;AACtB,mBAAO,KAAKN,oBAAZ;AACH;;AAED;;;;;;;;;4BAM6B;AACzB,mBAAO,KAAKG,uBAAZ;AACH;;AAED;;;;;;;;;4BAMiB;AACb,mBAAO,KAAKD,WAAZ;AACH;;AAED;;;;;;;;;4BAMyB;AACrB,mBAAO,KAAKD,mBAAZ;AACH;;AAED;;;;;;;;;4BAMa;AACT,mBAAO,KAAKI,OAAZ;AACH;;;;;;QAgBGnB,kB,GAAAA,kB;kBACOA,kB","file":"UserExistenceToken.js","sourcesContent":["'use strict';\n\nimport CoreObject from \"../CoreObject\";\nimport Utility from \"../Utility\";\n\n/**\n * This is the base class for all classes in our architecture.\n *\n * @abstract\n * @class\n */\nclass UserExistenceToken extends CoreObject {\n\n    /**\n     *\n     * @param {Object} options\n     * @param {String} options.username\n     * @param {Boolean} options.requiresNewPassword\n     * @param {Boolean} options.usingTemporaryPassword\n     * @param {Boolean} options.usingVerifiedEmail\n     * @param {Boolean} options.usingEmail\n     * @param {String} options.emailToken\n     * @param {Boolean} options.exists\n     */\n    constructor(options) {\n        let username = Utility.take(options, 'username', 'string', true);\n        let requiresNewPassword = Utility.take(options, 'requiresNewPassword', {\n            type: 'boolean',\n            defaultValue: false,\n            required: false\n        });\n        let usingTemporaryPassword = Utility.take(options, 'usingTemporaryPassword', {\n            type: 'boolean',\n            defaultValue: false,\n            required: false\n        });\n        let usingVerifiedEmail = Utility.take(options, 'usingVerifiedEmail', {\n            type: 'boolean',\n            defaultValue: false,\n            required: false\n        });\n        let usingEmail = Utility.take(options, 'usingEmail', {\n            type: 'boolean',\n            defaultValue: false,\n            required: false\n        });\n        let emailToken = Utility.take(options, 'emailToken', 'string', false);\n        let exists = Utility.take(options, 'exists', {\n            type: 'boolean',\n            defaultValue: false,\n            required: false\n        });\n\n        super(...arguments);\n\n        this._requiresNewPassword = requiresNewPassword;\n        this._usingVerifiedEmail = usingVerifiedEmail;\n        this._usingEmail = usingEmail;\n        this._usingTemporaryPassword = usingTemporaryPassword;\n        this._emailToken = emailToken;\n        this._exists = exists;\n        this._username = username;\n    }\n\n    /**\n     * @property\n     * @readonly\n     * @type {undefined|String}\n     * @return {undefined|String}\n     */\n    get emailToken() {\n        return this._emailToken;\n    }\n\n    /**\n     * @property\n     * @readonly\n     * @type {String}\n     * @return {String}\n     */\n    get username() {\n        return this._username;\n    }\n\n    /**\n     * @property\n     * @readonly\n     * @type {undefined|Boolean}\n     * @return {undefined|Boolean}\n     */\n    get requiresNewPassword() {\n        return this._requiresNewPassword;\n    }\n\n    /**\n     * @property\n     * @readonly\n     * @type {undefined|Boolean}\n     * @return {undefined|Boolean}\n     */\n    get usingTemporaryPassword() {\n        return this._usingTemporaryPassword;\n    }\n\n    /**\n     * @property\n     * @readonly\n     * @type {undefined|Boolean}\n     * @return {undefined|Boolean}\n     */\n    get usingEmail() {\n        return this._usingEmail;\n    }\n\n    /**\n     * @property\n     * @readonly\n     * @type {undefined|Boolean}\n     * @return {undefined|Boolean}\n     */\n    get usingVerifiedEmail() {\n        return this._usingVerifiedEmail;\n    }\n\n    /**\n     * @property\n     * @readonly\n     * @type {undefined|Boolean}\n     * @return {undefined|Boolean}\n     */\n    get exists() {\n        return this._exists;\n    }\n\n    toJson() {\n        return super.toJson({\n            username: this.username,\n            requiresNewPassword: this.requiresNewPassword,\n            usingTemporaryPassword: this.usingTemporaryPassword,\n            usingEmail: this.usingEmail,\n            usingVerifiedEmail: this.usingVerifiedEmail,\n            emailToken: this.emailToken,\n            exists: this.exists\n        });\n    }\n\n}\n\nexport {UserExistenceToken};\nexport default UserExistenceToken;"]}