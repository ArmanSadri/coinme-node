{"version":3,"sources":["../../../src/js/money/USD.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;AACA;;;;AACA;;;;;;;;;;;;;;;;IAKqB,G;;;;;;;;;;;;;;;;;mCAMC;AACd,mBAAO,KAAP;AACH;;;;;;;;kCAKgB;AACb,mBAAO,GAAP;AACH;;;;;;;;;;;;8BASY,e,EAAiB;AAC1B,gBAAI,WAAW,mBAAS,WAAT,CAAqB,eAArB,KAAyC,eAAxD;;AAEA,mBAAO,IAAI,OAAJ,CAAY,QAAZ,KAAyB,IAAI,UAAJ,CAAe,QAAf,CAAhC;AACH;;;;;;;;;;;oCAQkB,e,EAAiB;AAChC,gBAAI,CAAC,KAAK,KAAL,CAAW,eAAX,CAAL,EAAkC;AAC9B,gCAAc,IAAd,CAAmB,GAAnB,EAAwB,eAAxB,EAAyC,aAAzC;AACH;;AAED,mBAAO,eAAP;AACH;;;;;;;;;kBA1CgB,G","file":"USD.js","sourcesContent":["'use strict';\n\nimport {Utility, Preconditions} from \"~/\";\nimport Currency from \"./Currency\";\nimport Money from \"./Money\";\n\n/**\n * @class USD\n */\nexport default class USD extends Currency {\n\n    /**\n     *\n     * @returns {String}\n     */\n    static toString() {\n        return 'USD';\n    }\n\n    /**\n     * @returns {Class<USD>}\n     */\n    static toClass() {\n        return USD;\n    }\n\n    //region Detection\n    /**\n     * Detects if\n     *\n     * @param {Money|Currency|Class<Currency>} moneyOrCurrency\n     * @return {Boolean}\n     */\n    static isUSD(moneyOrCurrency) {\n        let currency = Currency.optCurrency(moneyOrCurrency) || moneyOrCurrency;\n\n        return USD.isClass(currency) || USD.isInstance(currency);\n    }\n\n    /**\n     * Determines if {@link USD#isUSD} returns true\n     *\n     * @param {Money|Currency|Class<Currency>} moneyOrCurrency\n     * @throws {PreconditionsError} if not the right currency type\n     */\n    static shouldBeUSD(moneyOrCurrency) {\n        if (!this.isUSD(moneyOrCurrency)) {\n            Preconditions.fail(USD, moneyOrCurrency, 'Must be USD');\n        }\n\n        return moneyOrCurrency;\n    }\n\n    //endregion\n\n}"]}