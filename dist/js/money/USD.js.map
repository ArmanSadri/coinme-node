{"version":3,"sources":["../../../src/js/money/USD.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;AACA;;;;AACA;;;;;;;;;;;;;;;;IAKqB;;;;;;;;;;;;;;;;;mCAMC;AACd,mBAAO,KAAP,CADc;;;;;;;;;kCAOD;AACb,mBAAO,GAAP,CADa;;;;;;;;;;;;;8BAWJ,iBAAiB;AAC1B,gBAAI,WAAW,mBAAS,WAAT,CAAqB,eAArB,KAAyC,eAAzC,CADW;;AAG1B,mBAAO,IAAI,OAAJ,CAAY,QAAZ,KAAyB,IAAI,UAAJ,CAAe,QAAf,CAAzB,CAHmB;;;;;;;;;;;;oCAYX,iBAAiB;AAChC,gBAAI,CAAC,KAAK,KAAL,CAAW,eAAX,CAAD,EAA8B;AAC9B,gCAAc,IAAd,CAAmB,GAAnB,EAAwB,eAAxB,EAAyC,aAAzC,EAD8B;aAAlC;;AAIA,mBAAO,eAAP,CALgC;;;;;;;WApCnB","file":"USD.js","sourcesContent":["'use strict';\r\n\r\nimport {Utility, Preconditions} from \"~/\";\r\nimport Currency from \"./Currency\";\r\nimport Money from \"./Money\";\r\n\r\n/**\r\n * @class USD\r\n */\r\nexport default class USD extends Currency {\r\n\r\n    /**\r\n     *\r\n     * @returns {String}\r\n     */\r\n    static toString() {\r\n        return 'USD';\r\n    }\r\n\r\n    /**\r\n     * @returns {Class<USD>}\r\n     */\r\n    static toClass() {\r\n        return USD;\r\n    }\r\n\r\n    //region Detection\r\n    /**\r\n     * Detects if\r\n     *\r\n     * @param {Money|Currency|Class<Currency>} moneyOrCurrency\r\n     * @return {Boolean}\r\n     */\r\n    static isUSD(moneyOrCurrency) {\r\n        let currency = Currency.optCurrency(moneyOrCurrency) || moneyOrCurrency;\r\n\r\n        return USD.isClass(currency) || USD.isInstance(currency);\r\n    }\r\n\r\n    /**\r\n     * Determines if {@link USD#isUSD} returns true\r\n     *\r\n     * @param {Money|Currency|Class<Currency>} moneyOrCurrency\r\n     * @throws {PreconditionsError} if not the right currency type\r\n     */\r\n    static shouldBeUSD(moneyOrCurrency) {\r\n        if (!this.isUSD(moneyOrCurrency)) {\r\n            Preconditions.fail(USD, moneyOrCurrency, 'Must be USD');\r\n        }\r\n\r\n        return moneyOrCurrency;\r\n    }\r\n\r\n    //endregion\r\n\r\n}"]}