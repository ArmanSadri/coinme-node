{"version":3,"sources":["../../../src/js/money/Satoshi.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;IAKqB,O;;;;;;;;;;;;;;;;;+BAMH,e,EAAiB;;;;AAI3B,gBAAI,QAAQ,mBAAS,aAAT,CAAuB,eAAvB,CAAZ;;AAEA,mBAAO,oBAAU;AACb,uBAAO,KADM;AAEb,0BAAU;AAFG,aAAV,CAAP;AAIH;;;;;;;;;qCAMmB,e,EAAiB;AACjC,mBAAO,QAAQ,MAAR,CAAe,eAAf,CAAP;AACH;;;;;;;;;oCAMkB,qB,EAAuB;AACtC,gBAAI,UAAU,mBAAS,aAAT,CAAuB,qBAAvB,CAAd;;AAEA,mBAAO,QAAQ,YAAR,CAAqB,QAAQ,KAAR,CAAc,kBAAQ,oBAAtB,CAArB,CAAP;AACH;;;mCAEiB;AACd,mBAAO,SAAP;AACH;;;;;;kBAtCgB,O","file":"Satoshi.js","sourcesContent":["'use strict';\n\nimport Currency from \"./Currency\";\nimport Money from \"./Money\";\nimport Bitcoin from \"./Bitcoin\";\n\n/**\n * @class Satoshi\n */\nexport default class Satoshi extends Currency {\n\n    /**\n     * @param {Number|String|Big|BigJsLibrary.BigJS} valueInSatoshis\n     * @return {Money}\n     */\n    static create(valueInSatoshis) {\n        /**\n         * @type {Big}\n         */\n        let value = Currency.toValueOrFail(valueInSatoshis);\n\n        return new Money({\n            value: value,\n            currency: this\n        });\n    }\n\n    /**\n     * @param {Money|Number|String|Big|BigJsLibrary.BigJS} valueInSatoshis\n     * @return {Money}\n     */\n    static fromSatoshis(valueInSatoshis) {\n        return Satoshi.create(valueInSatoshis);\n    }\n\n    /**\n     * @param {Number|String|Money|Big|BigJsLibrary.BigJS} valueInBitcoinOrMoney\n     * @return {Money}\n     */\n    static fromBitcoin(valueInBitcoinOrMoney) {\n        let bitcoin = Currency.toValueOrFail(valueInBitcoinOrMoney);\n\n        return Satoshi.fromSatoshis(bitcoin.times(Bitcoin.SATOSHIS_PER_BITCOIN));\n    }\n\n    static toString() {\n        return 'Satoshi';\n    }\n}"]}