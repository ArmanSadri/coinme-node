{"version":3,"sources":["../../../src/js/money/Money.es6"],"names":[],"mappings":";;;;;;;;AAAA;;;;AACA;;AACA;;;;;;;;;;;;IAEqB,K;cAAA,K;;;;;;;AAMjB,aANiB,KAMjB,CAAY,OAAZ,EAAqB;AAAA,8BANJ,KAMI;;AACjB,wBAAc,eAAd;;AAEA,YAAI,QAAQ,gBAAc,cAAd,CAA6B,mBAAS,aAAT,CAAuB,UAAQ,IAAR,CAAa,OAAb,EAAsB,OAAtB,CAAvB,CAA7B,CAAZ;AACA,YAAI,WAAW,gBAAc,eAAd,CAA8B,mBAAS,WAAT,CAAqB,UAAQ,IAAR,CAAa,OAAb,EAAsB,UAAtB,CAArB,CAA9B,CAAf;;;;;;;AAJiB,2EANJ,KAMI,cAMR,SANQ;;AAYjB,cAAK,MAAL,GAAc,gBAAc,cAAd,CAA6B,KAA7B,CAAd;;;;;;AAMA,cAAK,SAAL,GAAiB,mBAAS,gBAAT,CAA0B,QAA1B,CAAjB;AAlBiB;AAmBpB;;;;;;;;iBAzBgB,K;;mCA0CN;AACP,mBAAO,KAAK,QAAL,CAAc,QAAd,CAAuB,IAAvB,CAAP;AACH;;;iCAEQ;AACL,mBAAO,KAAK,QAAL,CAAc,MAAd,CAAqB,IAArB,CAAP;AACH;;;;;;;;;;;4BAQG,K,EAAO;AACP,oBAAQ,MAAM,QAAN,CAAe,KAAf,EAAsB,KAAK,QAA3B,CAAR;AACA,gBAAI,iBAAiB,KAAK,QAAL,CAAc,WAAd,CAA0B,KAA1B,CAArB;;AAEA,mBAAO,KAAK,MAAL,CAAY,iBAAiB,IAA7B,CAAP;AACH;;;;;;;;;;;iCAQQ,K,EAAO;AACZ,oBAAQ,MAAM,QAAN,CAAe,KAAf,EAAsB,KAAK,QAA3B,CAAR;AACA,gBAAI,iBAAiB,KAAK,QAAL,CAAc,WAAd,CAA0B,KAA1B,EAAiC,KAAtD;;AAEA,mBAAO,KAAK,MAAL,CAAY,iBAAiB,KAAK,KAAlC,CAAP;AACH;;;;;;;;;;+BAOM,K,EAAO,kB,EAAoB;AAC9B,oBAAQ,MAAM,QAAN,CAAe,KAAf,EAAsB,KAAK,QAA3B,CAAR;;AAEA,gBAAI,CAAC,KAAL,EAAY;AACR,uBAAO,KAAP;AACH;;AAED,gBAAI,iBAAiB,gBAAc,cAAd,CAA6B,mBAAS,aAAT,CAAuB,KAAK,QAAL,CAAc,WAAd,CAA0B,KAA1B,EAAiC,kBAAjC,CAAvB,CAA7B,EAA2G,mCAA3G,CAArB;AACA,gBAAI,QAAQ,gBAAc,cAAd,CAA6B,mBAAS,aAAT,CAAuB,IAAvB,CAA7B,EAA2D,6BAA3D,CAAZ;;AAEA,mBAAO,mBAAmB,KAA1B;AACH;;;kCAES;AACN,mBAAO,KAAK,KAAZ;AACH;;;;;;;;;;;+BAQM,K,EAAO;AACV,gBAAI,CAAC,KAAL,EAAY;AACR,wBAAQ,CAAR;AACH;;AAED,mBAAO,IAAI,KAAJ,CAAU;AACb,0BAAU,KAAK,QADF;AAEb,uBAAO;AAFM,aAAV,CAAP;AAIH;;;;;;;;;;;kCAQS,gB,EAAkB,kB,EAAoB;AAC5C,gBAAI,WAAW,mBAAS,WAAT,CAAqB,gBAArB,CAAf;;AAEA,mBAAO,SAAS,WAAT,CAAqB,IAArB,EAA2B,kBAA3B,CAAP;AACH;;;;;;;;;;;4BA9Fc;AACX,mBAAO,KAAK,SAAZ;AACH;;;;;;;;4BAKW;AACR,mBAAO,KAAK,MAAZ;AACH;;;iCA6Fe,Y,EAAc,e,EAAiB;AAC3C,gBAAI,MAAM,UAAN,CAAiB,YAAjB,CAAJ,EAAoC;AAChC,uBAAO,YAAP;AACH;;AAED,mBAAO,IAAI,KAAJ,CAAU;AACb,uBAAO,YADM;AAEb,0BAAU;AAFG,aAAV,CAAP;AAIH;;;WA9IgB,K;;;kBAAA,K","file":"Money.js","sourcesContent":["import Lodash from 'lodash';\r\nimport { Utility, Preconditions, CoreObject } from '~/';\r\nimport Currency from './Currency';\r\n\r\nexport default class Money extends CoreObject {\r\n\r\n    /**\r\n     * @param {Object} options\r\n     * @param {Number} options.value\r\n     */\r\n    constructor(options) {\r\n        Preconditions.shouldBeDefined(Currency);\r\n\r\n        let value = Preconditions.shouldBeNumber(Currency.toValueOrFail(Utility.take(options, 'value')));\r\n        let currency = Preconditions.shouldBeDefined(Currency.getCurrency(Utility.take(options, 'currency')));\r\n\r\n        super(...arguments);\r\n\r\n        /**\r\n         * @type {Number}\r\n         * @private\r\n         */\r\n        this._value = Preconditions.shouldBeNumber(value);\r\n\r\n        /**\r\n         * @type {Class<Currency>}\r\n         * @private\r\n         */\r\n        this._currency = Currency.shouldBeCurrency(currency);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @returns {Class<Currency>}\r\n     */\r\n    get currency() {\r\n        return this._currency;\r\n    }\r\n\r\n    /**\r\n     * @returns {Number}\r\n     */\r\n    get value() {\r\n        return this._value;\r\n    }\r\n\r\n    toString() {\r\n        return this.currency.toString(this);\r\n    }\r\n\r\n    toJson() {\r\n        return this.currency.toJson(this);\r\n    }\r\n\r\n    /**\r\n     * Returns a new instance of money, since this is immutable.\r\n     *\r\n     * @param {String|Number|Money} money\r\n     * @return {Money}\r\n     */\r\n    add(money) {\r\n        money = Money.optMoney(money, this.currency);\r\n        let convertedValue = this.currency.convertFrom(money);\r\n\r\n        return this.mutate(convertedValue + this);\r\n    }\r\n\r\n    /**\r\n     * Returns a new instance of money, since this is immutable.\r\n     *\r\n     * @param {String|Number|Money} money\r\n     * @return {Money}\r\n     */\r\n    subtract(money) {\r\n        money = Money.optMoney(money, this.currency);\r\n        let convertedValue = this.currency.convertFrom(money).value;\r\n\r\n        return this.mutate(convertedValue - this.value);\r\n    }\r\n\r\n    /**\r\n     * @param {Money|String|Number} money\r\n     * @param {Number|Function} [optionalConversion]\r\n     * @returns {boolean}\r\n     */\r\n    equals(money, optionalConversion) {\r\n        money = Money.optMoney(money, this.currency);\r\n\r\n        if (!money) {\r\n            return false;\r\n        }\r\n\r\n        let convertedAlien = Preconditions.shouldBeNumber(Currency.toValueOrFail(this.currency.convertFrom(money, optionalConversion)), 'Converted value must be a number.');\r\n        let value = Preconditions.shouldBeNumber(Currency.toValueOrFail(this), 'Our value must be a number.');\r\n\r\n        return convertedAlien === value;\r\n    }\r\n\r\n    valueOf() {\r\n        return this.value;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Number} value\r\n     * @returns {Money}\r\n     * @private\r\n     */\r\n    mutate(value) {\r\n        if (!value) {\r\n            value = 0;\r\n        }\r\n\r\n        return new Money({\r\n            currency: this.currency,\r\n            value: value\r\n        });\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Currency|Class<Currency>|String} currencyOrString\r\n     * @param {Number|Function|Converter} [optionalConversion]\r\n     * @returns {Money}\r\n     */\r\n    convertTo(currencyOrString, optionalConversion) {\r\n        let currency = Currency.getCurrency(currencyOrString);\r\n\r\n        return currency.convertFrom(this, optionalConversion);\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param {Number|String|Money} valueOrMoney\r\n     * @param {Class<Currency>} [defaultCurrency]\r\n     * @returns {Money|undefined}\r\n     */\r\n    static optMoney(valueOrMoney, defaultCurrency) {\r\n        if (Money.isInstance(valueOrMoney)) {\r\n            return valueOrMoney;\r\n        }\r\n\r\n        return new Money({\r\n            value: valueOrMoney,\r\n            currency: defaultCurrency\r\n        });\r\n    }\r\n}"]}