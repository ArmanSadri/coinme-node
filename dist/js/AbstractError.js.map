{"version":3,"sources":["../../src/js/AbstractError.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;IAMM;;;AAEF,aAFE,aAEF,CAAY,OAAZ,EAAqB;8BAFnB,eAEmB;;2EAFnB,0BAGQ,UADW;;AAKjB,cAAK,IAAL,GAAY,MAAK,WAAL,CAAiB,IAAjB,CALK;AAMjB,cAAK,OAAL,GAAe,OAAf,CANiB;;AAQjB,YAAI,OAAO,MAAM,iBAAN,KAA4B,UAAnC,EAA+C;AAE/C,kBAAM,iBAAN,QAA8B,MAAK,WAAL,CAA9B,CAF+C;SAAnD,MAGO;AAEH,kBAAK,KAAL,GAAa,IAAK,KAAJ,CAAU,OAAV,CAAD,CAAqB,KAArB,CAFV;SAHP;qBARiB;KAArB;;WAFE;EAAsB;;kBAoBb","file":"AbstractError.js","sourcesContent":["console.log('capture stack -1');\n\n/**\n *\n * @class\n */\nclass AbstractError extends Error {\n\n    constructor(message) {\n        super(message);\n\n        console.log('capture stack 0');\n\n        this.name = this.constructor.name;\n        this.message = message;\n\n        if (typeof Error.captureStackTrace === 'function') {\n            console.log('capture stack 1');\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            console.log('capture stack 2');\n            this.stack = (new Error(message)).stack;\n        }\n    }\n}\n\nexport default AbstractError;"]}