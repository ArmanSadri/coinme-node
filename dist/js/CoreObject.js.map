{"version":3,"sources":["../../src/js/CoreObject.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;;;;IASqB,U;;;AAEjB,wBAAY,OAAZ,EAAqB;AAAA;;AACjB,YAAI,kBAAQ,aAAR,CAAsB,OAAtB,KAAkC,kBAAQ,QAAR,CAAiB,OAAjB,CAAtC,EAAiE;AAAA,uGACpD,SADoD;;AAG7D,6BAAO,KAAP,QAAmB,OAAnB;AACH,SAJD,MAIO;AAAA,sGACG,EADH;AAEN;AAPgB;AAQpB;;;;;;;;;;;4BAOG,G,EAAK;AACL,mBAAO,gBAAM,GAAN,CAAU,IAAV,EAAgB,GAAhB,CAAP;AACH;;;;;;;;;;;4BAQG,G,EAAK,K,EAAO;AACZ,4BAAM,GAAN,CAAU,IAAV,EAAgB,GAAhB,EAAqB,KAArB;;AAEA,mBAAO,IAAP;AACH;;;;;;;;mCAKU;AACP,mBAAO,KAAK,OAAL,GAAe,QAAf,EAAP;AACH;;;;;;;;;kCAMS;AACN,mBAAO,KAAK,WAAZ;AACH;;;+BAEM,O,EAAS;AACZ,mBAAO,iBAAO,MAAP,CAAc;AACjB,wBAAQ,KAAK,WAAL,CAAiB;AADR,aAAd,EAEJ,WAAW,EAFP,CAAP;AAGH;;;;;;;;;kCAMgB;AACb,mBAAO,IAAP;AACH;;;;;;;;mCAKiB;AACd,mBAAO,KAAK,WAAL,CAAiB,IAAxB;AACH;;;;;;;;;;;gCAQc,K,EAAO;AAClB,gBAAI,eAAe,OAAO,KAA1B,EAAiC;AAC7B,uBAAO,KAAP;AACH;;AAED,mBAAO,KAAP,EAAc;AACV,oBAAI,UAAU,IAAd,EAAoB;AAChB,2BAAO,IAAP;AACH;;AAED,wBAAQ,OAAO,cAAP,CAAsB,KAAtB,CAAR;AACH;;AAED,mBAAO,KAAP;AACH;;;+BAEa,Y,EAAc;AACxB,mBAAO,KAAK,OAAL,CAAa,YAAb,CAAP;AACH;;;;;;;;;;;gDAQ8B,e,EAAiB,O,EAAS;AACrD,gBAAI,CAAC,KAAK,UAAL,CAAgB,eAAhB,CAAD,IAAqC,CAAC,KAAK,OAAL,CAAa,eAAb,CAA1C,EAAyE;AACrE,wCAAc,IAAd,CAAmB,KAAK,OAAL,EAAnB,EAAmC,WAAW,QAAX,CAAoB,eAApB,CAAnC,EAAyE,WAAW,uCAApF;AACH;;AAED,mBAAO,eAAP;AACH;;;;;;;;;;mCAOiB,G,EAAK;AACnB,mBAAO,eAAe,IAAtB;AACH;;;;;;;;;;;yCAQuB,G,EAAK,O,EAAS;AAClC,gBAAI,CAAC,KAAK,UAAL,CAAgB,GAAhB,CAAL,EAA2B;AACvB,wCAAc,IAAd,CAAmB,KAAK,OAAL,EAAnB,EAAmC,kBAAQ,QAAR,CAAiB,GAAjB,CAAnC,EAA0D,WAAW,2BAArE;AACH;;AAED,mBAAO,GAAP;AACH;;;;;;;;;;0CAOwB,G,EAAK;AAC1B,mBAAO,KAAK,UAAL,CAAgB,GAAhB,KAAwB,KAAK,OAAL,CAAa,GAAb,CAA/B;AACH;;;;EA3ImC,gBAAM,M;;kBAAzB,U","file":"CoreObject.js","sourcesContent":["'use strict';\n\nimport Ember from \"./Ember\";\nimport Lodash from \"lodash\";\nimport Preconditions from \"./Preconditions\";\nimport Utility from \"./Utility\";\n\n/**\n * This is the base class for all classes in our architecture.\n *\n *\n * @abstract\n * @class\n */\nexport default class CoreObject extends Ember.Object {\n\n    constructor(options) {\n        if (Utility.isNotExisting(options) || Utility.isObject(options)) {\n            super(...arguments);\n\n            Lodash.merge(this, options);\n        } else {\n            super({});\n        }\n    }\n\n    /**\n     *\n     * @param {string} key\n     * @returns {*|Object}\n     */\n    get(key) {\n        return Ember.get(this, key);\n    }\n\n    /**\n     *\n     * @param {string} key\n     * @param {*} value\n     * @returns {CoreObject|*}\n     */\n    set(key, value) {\n        Ember.set(this, key, value);\n\n        return this;\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this.toClass().toString();\n    }\n\n    /**\n     *\n     * @returns {Class<CoreObject>}\n     */\n    toClass() {\n        return this.constructor;\n    }\n\n    toJson(options) {\n        return Lodash.assign({\n            _class: this.constructor.name\n        }, options || {});\n    }\n\n    /**\n     *\n     * @returns {Class<CoreObject>}\n     */\n    static toClass() {\n        return this;\n    }\n\n    /**\n     * @returns {String}\n     */\n    static toString() {\n        return this.constructor.name;\n    }\n\n    /**\n     * Determines if a class definition is a subclass of CoreObject\n     *\n     * @param {*} clazz\n     * @returns {boolean}\n     */\n    static isClass(clazz) {\n        if ('function' !== typeof clazz) {\n            return false;\n        }\n\n        while (clazz) {\n            if (clazz === this) {\n                return true;\n            }\n\n            clazz = Object.getPrototypeOf(clazz);\n        }\n\n        return false;\n    }\n\n    static equals(foreignClass) {\n        return this.isClass(foreignClass);\n    }\n\n    /**\n     *\n     * @param {CoreObject|Class|*} instanceOrClass\n     * @param {String} [message]\n     * @returns {*}\n     */\n    static shouldBeClassOrInstance(instanceOrClass, message) {\n        if (!this.isInstance(instanceOrClass) && !this.isClass(instanceOrClass)) {\n            Preconditions.fail(this.toClass(), CoreObject.optClass(instanceOrClass), message || 'Was not the correct class or instance')\n        }\n\n        return instanceOrClass;\n    }\n\n    /**\n     *\n     * @param {*|CoreObject} obj\n     * @returns {boolean}\n     */\n    static isInstance(obj) {\n        return obj instanceof this;\n    }\n\n    /**\n     *\n     * @param {*|CoreObject} obj\n     * @param {String} [message]\n     * @returns {*|CoreObject}\n     */\n    static shouldBeInstance(obj, message) {\n        if (!this.isInstance(obj)) {\n            Preconditions.fail(this.toClass(), Utility.optClass(obj), message || 'Was not the correct class')\n        }\n\n        return obj;\n    }\n\n    /**\n     *\n     * @param obj\n     * @return {boolean}\n     */\n    static isInstanceOrClass(obj) {\n        return this.isInstance(obj) || this.isClass(obj);\n    }\n\n}"]}