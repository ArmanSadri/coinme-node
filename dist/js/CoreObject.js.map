{"version":3,"sources":["../../src/js/CoreObject.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;;;;;;;;;;;;;;;;;IASqB,U;cAAA,U;;iBAAA,U;;4BAEb,G,EAAK;AACL,mBAAO,gBAAM,GAAN,CAAU,IAAV,EAAgB,GAAhB,CAAP;AACH;;;4BAEG,G,EAAK,K,EAAO;AACZ,mBAAO,gBAAM,GAAN,CAAU,IAAV,EAAgB,GAAhB,EAAqB,KAArB,CAAP;AACH;;;AAED,aAViB,UAUjB,CAAY,OAAZ,EAAqB;AAAA,8BAVJ,UAUI;;AAAA,2EAVJ,UAUI,cACR,SADQ;;AAEjB,yBAAO,KAAP,QAAmB,OAAnB;AAFiB;AAGpB;;iBAbgB,U;;mCAeN;AACP,mBAAO,KAAK,OAAL,GAAe,QAAf,EAAP;AACH;;;kCAES;AACN,mBAAO,KAAK,WAAZ;AACH;;;kCAEgB;AACb,mBAAO,IAAP;AACH;;;mCAEiB;AACd,mBAAO,YAAP;AACH;;;;;;;;;;;gCAQc,K,EAAO;AAClB,gBAAI,eAAe,OAAO,KAA1B,EAAiC;AAC7B,uBAAO,KAAP;AACH;;AAED,mBAAO,KAAP,EAAc;AACV,oBAAI,UAAU,IAAd,EAAoB;AAChB,2BAAO,IAAP;AACH;;AAED,wBAAQ,OAAO,cAAP,CAAsB,KAAtB,CAAR;AACH;;AAED,mBAAO,KAAP;AACH;;;;;;;;;;mCAOiB,G,EAAK;AACnB,mBAAO,eAAe,IAAtB;AACH;;;WA5DgB,U;EAAmB,gBAAM,M;;kBAAzB,U","file":"CoreObject.js","sourcesContent":["'use strict';\n\nimport Ember from \"~/ember\";\nimport Lodash from \"lodash\";\n\n/**\n * This is the base class for all classes in our architecture.\n *\n *\n * @abstract\n * @class\n */\nexport default class CoreObject extends Ember.Object {\n\n    get(key) {\n        return Ember.get(this, key);\n    }\n\n    set(key, value) {\n        return Ember.set(this, key, value);\n    }\n\n    constructor(options) {\n        super(...arguments);\n        Lodash.merge(this, options);\n    }\n\n    toString() {\n        return this.toClass().toString();\n    }\n\n    toClass() {\n        return this.constructor;\n    }\n\n    static toClass() {\n        return this;\n    }\n\n    static toString() {\n        return 'CoreObject';\n    }\n\n    /**\n     * Determines if a class definition is a subclass of CoreObject\n     *\n     * @param {*} clazz\n     * @returns {boolean}\n     */\n    static isClass(clazz) {\n        if ('function' !== typeof clazz) {\n            return false;\n        }\n\n        while (clazz) {\n            if (clazz === this) {\n                return true;\n            }\n\n            clazz = Object.getPrototypeOf(clazz);\n        }\n\n        return false;\n    }\n\n    /**\n     *\n     * @param {object} obj\n     * @returns {boolean}\n     */\n    static isInstance(obj) {\n        return obj instanceof this;\n    }\n}"]}