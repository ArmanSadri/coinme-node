{"version":3,"sources":["../../src/js/CoreObject.js"],"names":["Logger","CoreObject","options","logger","isNotExisting","isObject","arguments","take","merge","_logger","key","get","value","set","toClass","toString","constructor","assign","_class","name","clazz","Object","getPrototypeOf","foreignClass","isClass","instanceOrClass","message","isInstance","fail","optClass","obj"],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA,IAAMA,SAAS,kBAAQA,MAAvB;;AAEA;;;;;;;;IAOqBC,U;;;AAEjB,wBAAYC,OAAZ,EAAqB;AAAA;;AACjB,YAAIC,eAAJ;;AAEA,YAAI,kBAAQC,aAAR,CAAsBF,OAAtB,KAAkC,kBAAQG,QAAR,CAAiBH,OAAjB,CAAtC,EAAiE;AAAA,iIACpDI,SADoD;;AAG7DH,qBAAS,kBAAQI,IAAR,CAAaL,OAAb,EAAsB,QAAtB,CAAT;;AAEA,6BAAOM,KAAP,QAAmBN,OAAnB;AACH,SAND,MAMO;AAAA,gIACG,EADH;AAEN;;AAED,cAAKO,OAAL,GAAeN,UAAU,IAAIH,MAAJ,EAAzB;AAbiB;AAcpB;;AAED;;;;;;;;;AAOA;;;;;4BAKIU,G,EAAK;AACL,mBAAO,gBAAMC,GAAN,CAAU,IAAV,EAAgBD,GAAhB,CAAP;AACH;;AAED;;;;;;;;;4BAMIA,G,EAAKE,K,EAAO;AACZ,4BAAMC,GAAN,CAAU,IAAV,EAAgBH,GAAhB,EAAqBE,KAArB;;AAEA,mBAAO,IAAP;AACH;;AAED;;;;;;mCAGW;AACP,mBAAO,KAAKE,OAAL,GAAeC,QAAf,EAAP;AACH;;AAED;;;;;;;kCAIU;AACN,mBAAO,KAAKC,WAAZ;AACH;;;+BAEMd,O,EAAS;AACZ,mBAAO,iBAAOe,MAAP,CAAc;AACjBC,wBAAQ,KAAKF,WAAL,CAAiBG;AADR,aAAd,EAEJjB,WAAW,EAFP,CAAP;AAGH;;AAED;;;;;;;4BA9Ca;AACT,mBAAO,KAAKO,OAAZ;AACH;;;kCAgDgB;AACb,mBAAO,IAAP;AACH;;AAED;;;;;;mCAGkB;AACd,mBAAO,KAAKO,WAAL,CAAiBG,IAAxB;AACH;;AAED;;;;;;;;;gCAMeC,K,EAAO;AAClB,gBAAI,eAAe,OAAOA,KAA1B,EAAiC;AAC7B,uBAAO,KAAP;AACH;;AAED,mBAAOA,KAAP,EAAc;AACV,oBAAIA,UAAU,IAAd,EAAoB;AAChB,2BAAO,IAAP;AACH;;AAEDA,wBAAQC,OAAOC,cAAP,CAAsBF,KAAtB,CAAR;AACH;;AAED,mBAAO,KAAP;AACH;;;+BAEaG,Y,EAAc;AACxB,mBAAO,KAAKC,OAAL,CAAaD,YAAb,CAAP;AACH;;AAED;;;;;;;;;gDAM+BE,e,EAAiBC,O,EAAS;AACrD,gBAAI,CAAC,KAAKC,UAAL,CAAgBF,eAAhB,CAAD,IAAqC,CAAC,KAAKD,OAAL,CAAaC,eAAb,CAA1C,EAAyE;AACrE,wCAAcG,IAAd,CAAmB,KAAKd,OAAL,EAAnB,EAAmCb,WAAW4B,QAAX,CAAoBJ,eAApB,CAAnC,EAAyEC,WAAW,uCAApF;AACH;;AAED,mBAAOD,eAAP;AACH;;AAED;;;;;;;;mCAKkBK,G,EAAK;AACnB,mBAAOA,eAAe,IAAtB;AACH;;AAED;;;;;;;;;yCAMwBA,G,EAAKJ,O,EAAS;AAClC,gBAAI,CAAC,KAAKC,UAAL,CAAgBG,GAAhB,CAAL,EAA2B;AACvB,wCAAcF,IAAd,CAAmB,KAAKd,OAAL,EAAnB,EAAmC,kBAAQe,QAAR,CAAiBC,GAAjB,CAAnC,EAA0DJ,WAAW,2BAArE;AACH;;AAED,mBAAOI,GAAP;AACH;;AAED;;;;;;;;0CAKyBA,G,EAAK;AAC1B,mBAAO,KAAKH,UAAL,CAAgBG,GAAhB,KAAwB,KAAKN,OAAL,CAAaM,GAAb,CAA/B;AACH;;;;EAxJmC,gBAAMT,M;;kBAAzBpB,U","file":"CoreObject.js","sourcesContent":["'use strict';\n\nimport Ember from \"./Ember\";\nimport Lodash from \"lodash\";\nimport Preconditions from \"./Preconditions\";\nimport Utility from \"./Utility\";\nimport winston from \"winston\";\n\nconst Logger = winston.Logger;\n\n/**\n * This is the base class for all classes in our architecture.\n *\n *\n * @abstract\n * @class\n */\nexport default class CoreObject extends Ember.Object {\n\n    constructor(options) {\n        let logger;\n\n        if (Utility.isNotExisting(options) || Utility.isObject(options)) {\n            super(...arguments);\n\n            logger = Utility.take(options, 'logger');\n\n            Lodash.merge(this, options);\n        } else {\n            super({});\n        }\n\n        this._logger = logger || new Logger();\n    }\n\n    /**\n     * @return {winston.Logger|Logger}\n     */\n    get logger() {\n        return this._logger;\n    }\n\n    /**\n     *\n     * @param {string} key\n     * @returns {*|Object}\n     */\n    get(key) {\n        return Ember.get(this, key);\n    }\n\n    /**\n     *\n     * @param {string} key\n     * @param {*} value\n     * @returns {CoreObject|*}\n     */\n    set(key, value) {\n        Ember.set(this, key, value);\n\n        return this;\n    }\n\n    /**\n     * @returns {string}\n     */\n    toString() {\n        return this.toClass().toString();\n    }\n\n    /**\n     *\n     * @returns {Class<CoreObject>}\n     */\n    toClass() {\n        return this.constructor;\n    }\n\n    toJson(options) {\n        return Lodash.assign({\n            _class: this.constructor.name\n        }, options || {});\n    }\n\n    /**\n     *\n     * @returns {Class<CoreObject>}\n     */\n    static toClass() {\n        return this;\n    }\n\n    /**\n     * @returns {String}\n     */\n    static toString() {\n        return this.constructor.name;\n    }\n\n    /**\n     * Determines if a class definition is a subclass of CoreObject\n     *\n     * @param {*} clazz\n     * @returns {boolean}\n     */\n    static isClass(clazz) {\n        if ('function' !== typeof clazz) {\n            return false;\n        }\n\n        while (clazz) {\n            if (clazz === this) {\n                return true;\n            }\n\n            clazz = Object.getPrototypeOf(clazz);\n        }\n\n        return false;\n    }\n\n    static equals(foreignClass) {\n        return this.isClass(foreignClass);\n    }\n\n    /**\n     *\n     * @param {CoreObject|Class|*} instanceOrClass\n     * @param {String} [message]\n     * @returns {*}\n     */\n    static shouldBeClassOrInstance(instanceOrClass, message) {\n        if (!this.isInstance(instanceOrClass) && !this.isClass(instanceOrClass)) {\n            Preconditions.fail(this.toClass(), CoreObject.optClass(instanceOrClass), message || 'Was not the correct class or instance')\n        }\n\n        return instanceOrClass;\n    }\n\n    /**\n     *\n     * @param {*|CoreObject} obj\n     * @returns {boolean}\n     */\n    static isInstance(obj) {\n        return obj instanceof this;\n    }\n\n    /**\n     *\n     * @param {*|CoreObject} obj\n     * @param {String} [message]\n     * @returns {*|CoreObject}\n     */\n    static shouldBeInstance(obj, message) {\n        if (!this.isInstance(obj)) {\n            Preconditions.fail(this.toClass(), Utility.optClass(obj), message || 'Was not the correct class')\n        }\n\n        return obj;\n    }\n\n    /**\n     *\n     * @param obj\n     * @return {boolean}\n     */\n    static isInstanceOrClass(obj) {\n        return this.isInstance(obj) || this.isClass(obj);\n    }\n\n}"]}