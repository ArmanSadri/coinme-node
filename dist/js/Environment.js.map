{"version":3,"sources":["../../src/js/Environment.js"],"names":["Environment","options","identity","take","configuration","certificate","required","adapter","value","fromHome","_identity","_configuration","_certificate","hostname","host","whoami","user","tmpdir","home"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;AACA;;;;;;;;;;;;IAEMA,W;;;AAEF;;;;;;AAMA,yBAAYC,OAAZ,EAAqB;AAAA;;AACjB,YAAIC,WAAW,kBAAQC,IAAR,CAAaF,OAAb,EAAsB,UAAtB,sBAA4C,IAA5C,CAAf;AACA,YAAIG,gBAAgB,kBAAQD,IAAR,CAAaF,OAAb,EAAsB,eAAtB,EAAuC,KAAvC,CAApB;AACA,YAAII,cAAc,kBAAQF,IAAR,CAAaF,OAAb,EAAsB,aAAtB,EAAqC;AACnDK,sBAAU,IADyC;AAEnDC,mBAFmD,mBAE3CC,KAF2C,EAEpC;AACX,oBAAI,CAACA,KAAL,EAAY;AACR,2BAAO,qCAAkBC,QAAlB,EAAP;AACH;;AAED,uBAAOD,KAAP;AACH;AARkD,SAArC,CAAlB;;AAHiB,8HAcXP,OAdW;;AAgBjB,cAAKS,SAAL,GAAiBR,QAAjB;AACA,cAAKS,cAAL,GAAsBP,aAAtB;AACA,cAAKQ,YAAL,GAAoBP,WAApB;AAlBiB;AAmBpB;;AAED;;;;;;;;;;;;;;;4BAWc;AACV,mBAAO;AACHQ,0BAAU,gBAAMC,IAAN,EADP;AAEHC,wBAAQ,gBAAMC,IAAN,EAFL;AAGHC,wBAAQ,gBAAMA,MAAN,EAHL;AAIHC,sBAAM,gBAAMA,IAAN;AAJH,aAAP;AAMH;;AAED;;;;;;4BAGe;AACX,mBAAO,KAAKR,SAAZ;AACH;;AAED;;;;;;;4BAIkB;AACd,mBAAO,KAAKE,YAAZ;AACH;;AAED;;;;;;;;4BAKoB;AAChB,mBAAO,KAAKD,cAAZ;AACH;;;;;;QAGGX,W,GAAAA,W;kBACOA,W","file":"Environment.js","sourcesContent":["import Identity from \"data/Identity\";\nimport Snowflake from \"node-snowflake\";\nimport fs from \"fs\";\nimport CoreObject from \"./CoreObject\";\nimport Utility from \"./Utility\";\nimport Preconditions from \"./Preconditions\";\nimport {CertificateBundle} from \"./data/CertificateBundle\";\nimport osenv  from \"osenv\";\n\nclass Environment extends CoreObject {\n\n    /**\n     *\n     * @param {Object} options\n     * @param {Identity} options.identity\n     * @param {Object} options.configuration\n     */\n    constructor(options) {\n        let identity = Utility.take(options, 'identity', Identity, true);\n        let configuration = Utility.take(options, 'configuration', false);\n        let certificate = Utility.take(options, 'certificate', {\n            required: true,\n            adapter(value) {\n                if (!value) {\n                    return CertificateBundle.fromHome();\n                }\n\n                return value;\n            }\n        });\n\n        super(options);\n\n        this._identity = identity;\n        this._configuration = configuration;\n        this._certificate = certificate;\n    }\n\n    /**\n     * @returns {{\n     *  hostname:String,\n     *  user:String,\n     *  tmpdir:String,\n     *  home: function,\n     *  searchPaths: Array,\n     *  editor: function,\n     *  shell:Object\n     * }}\n     */\n    get runtime() {\n        return {\n            hostname: osenv.host(),\n            whoami: osenv.user(),\n            tmpdir: osenv.tmpdir(),\n            home: osenv.home()\n        };\n    }\n\n    /**\n     * @return {Identity}\n     */\n    get identity() {\n        return this._identity;\n    }\n\n    /**\n     *\n     * @return {CertificateBundle}\n     */\n    get certificate() {\n        return this._certificate;\n    }\n\n    /**\n     * @property\n     * @readonly\n     * @returns {Object}\n     */\n    get configuration() {\n        return this._configuration;\n    }\n}\n\nexport {Environment};\nexport default Environment;"]}