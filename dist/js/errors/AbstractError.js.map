{"version":3,"sources":["../../../src/js/errors/AbstractError.js"],"names":[],"mappings":";;;;;;;;;;;;;;AAAA,SAAS,iBAAT,CAA2B,GAA3B,EAA+B;;AAE3B,aAAS,iBAAT,GAA4B;AACxB,YAAI,KAAJ,CAAU,IAAV,EAAgB,SAAhB;AACH;;AAED,sBAAkB,SAAlB,GAA8B,OAAO,MAAP,CAAc,IAAI,SAAlB,CAA9B;;AAEA,WAAO,cAAP,CAAsB,iBAAtB,EAAyC,GAAzC;;AAEA,WAAO,iBAAP;AACH;;;;;;;IAMK,a;;;AAEF,2BAAY,OAAZ,EAAqB;AAAA;;AAAA,qGACX,OADW;;AAGjB,cAAK,IAAL,GAAY,MAAK,WAAL,CAAiB,IAA7B;AACA,cAAK,OAAL,GAAe,OAAf;;AAEA,YAAI,QAAQ,MAAM,IAAN,QAAiB,OAAjB,CAAZ;;;;;;AAMA,cAAK,KAAL,GAAa,MAAM,KAAnB;AAZiB;AAapB;;;;;;;;;;;;gCAQc,K,EAAO;AAClB,gBAAI,eAAe,OAAO,KAA1B,EAAiC;AAC7B,uBAAO,KAAP;AACH;;AAED,mBAAO,KAAP,EAAc;AACV,oBAAI,UAAU,IAAd,EAAoB;AAChB,2BAAO,IAAP;AACH;;AAED,wBAAQ,OAAO,cAAP,CAAsB,KAAtB,CAAR;AACH;;AAED,mBAAO,KAAP;AACH;;;;;;;;;;mCAOiB,G,EAAK;AACnB,mBAAO,eAAe,IAAtB;AACH;;;;EA9CuB,kBAAkB,KAAlB,C;;kBAiDb,a","file":"AbstractError.js","sourcesContent":["function ExtendableBuiltin(cls){\n\n    function ExtendableBuiltin(){\n        cls.apply(this, arguments);\n    }\n    \n    ExtendableBuiltin.prototype = Object.create(cls.prototype);\n\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n\n    return ExtendableBuiltin;\n}\n\n/**\n *\n * @class\n */\nclass AbstractError extends ExtendableBuiltin(Error) {\n\n    constructor(message) {\n        super(message);\n\n        this.name = this.constructor.name;\n        this.message = message;\n\n        var error = Error.call(this, message);\n        // if (typeof Error.captureStackTrace === 'function') {\n        //     Error.captureStackTrace(this, this.constructor);\n        // } else {\n        //     this.stack = (new Error(message)).stack;\n        // }\n        this.stack = error.stack;\n    }\n\n    /**\n     * Determines if a class definition is a subclass of CoreObject\n     *\n     * @param {*} clazz\n     * @returns {boolean}\n     */\n    static isClass(clazz) {\n        if ('function' !== typeof clazz) {\n            return false;\n        }\n\n        while (clazz) {\n            if (clazz === this) {\n                return true;\n            }\n\n            clazz = Object.getPrototypeOf(clazz);\n        }\n\n        return false;\n    }\n\n    /**\n     *\n     * @param {*} obj\n     * @returns {boolean}\n     */\n    static isInstance(obj) {\n        return obj instanceof this;\n    }\n}\n\nexport default AbstractError;"]}