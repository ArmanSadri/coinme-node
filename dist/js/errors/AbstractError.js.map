{"version":3,"sources":["../../../src/js/errors/AbstractError.js"],"names":["ExtendableBuiltin","cls","apply","arguments","prototype","Object","create","setPrototypeOf","optJson","object","undefined","isObject","isFunction","toJSON","toJson","AbstractError","options","isString","message","isNullOrUndefined","take","cause","error","Error","call","stack","name","constructor","_cause","clazz","getPrototypeOf","obj","isInstance","isClass"],"mappings":";;;;;;;;;AAAA;;;;;;;;;;;;AAEA,SAASA,iBAAT,CAA2BC,GAA3B,EAA+B;;AAE3B,aAASD,iBAAT,GAA4B;AACxBC,YAAIC,KAAJ,CAAU,IAAV,EAAgBC,SAAhB;AACH;;AAEDH,sBAAkBI,SAAlB,GAA8BC,OAAOC,MAAP,CAAcL,IAAIG,SAAlB,CAA9B;;AAEAC,WAAOE,cAAP,CAAsBP,iBAAtB,EAAyCC,GAAzC;;AAEA,WAAOD,iBAAP;AACH;;AAED;;;;;AAKA,SAASQ,OAAT,CAAiBC,MAAjB,EAAyB;AACrB,QAAI,CAACA,MAAL,EAAa;AACT,eAAOC,SAAP;AACH;;AAED,QAAI,CAAC,kBAAQC,QAAR,CAAiBF,MAAjB,CAAL,EAA+B;AAC3B,eAAOC,SAAP;AACH;;AAED,QAAI,kBAAQE,UAAR,CAAmBH,OAAOI,MAA1B,CAAJ,EAAuC;AACnC,eAAOJ,OAAOI,MAAP,EAAP;AACH,KAFD,MAEO,IAAI,kBAAQD,UAAR,CAAmBH,OAAOK,MAA1B,CAAJ,EAAuC;AAC1C,eAAOL,OAAOK,MAAP,EAAP;AACH;;AAED,WAAOJ,SAAP;AACH;;AAED;;;;IAGMK,a;;;AAEF;;;;AAIA,2BAAYC,OAAZ,EAAqB;AAAA;;AACjB,YAAI,kBAAQC,QAAR,CAAiBD,OAAjB,CAAJ,EAA+B;AAC3B,gBAAIE,WAAUF,OAAd;;AAEAA,sBAAU,EAAEE,SAASA,QAAX,EAAV;AACH,SAJD,MAIO,IAAI,kBAAQC,iBAAR,CAA0BH,OAA1B,CAAJ,EAAwC;AAC3CA,sBAAU,EAAEE,SAAS,eAAX,EAAV;AACH;;AAED;;;AAGA,YAAIA,UAAU,kBAAQE,IAAR,CAAaJ,OAAb,EAAsB,SAAtB,CAAd;AACA;;;AAGA,YAAIK,QAAQ,kBAAQD,IAAR,CAAaJ,OAAb,EAAsB,OAAtB,CAAZ;AACA;;AAjBiB,kIAmBXE,OAnBW;;AAqBjB,YAAII,QAAQC,MAAMC,IAAN,QAAiBN,OAAjB,CAAZ;AACA;AACA;AACA;AACA;AACA;AACA,cAAKO,KAAL,GAAaH,MAAMG,KAAnB;AACA,cAAKC,IAAL,GAAY,MAAKC,WAAL,CAAiBD,IAA7B;AACA,cAAKR,OAAL,GAAeA,OAAf;AACA,cAAKU,MAAL,GAAcP,KAAd;AA9BiB;AA+BpB;;;;iCAMQ;AACL,mBAAO;AACHI,uBAAO,KAAKA,KADT;AAEHC,sBAAM,KAAKA,IAFR;AAGHL,uBAAOb,QAAQ,KAAKa,KAAb,CAHJ;AAIHH,yBAAS,KAAKA;AAJX,aAAP;AAMH;;AAED;;;;;;;;;4BAbY;AACR,mBAAO,KAAKU,MAAZ;AACH;;;gCAiBcC,K,EAAO;AAClB,gBAAI,eAAe,OAAOA,KAA1B,EAAiC;AAC7B,uBAAO,KAAP;AACH;;AAED,mBAAOA,KAAP,EAAc;AACV,oBAAIA,UAAU,IAAd,EAAoB;AAChB,2BAAO,IAAP;AACH;;AAEDA,wBAAQxB,OAAOyB,cAAP,CAAsBD,KAAtB,CAAR;AACH;;AAED,mBAAO,KAAP;AACH;;AAED;;;;;;;;mCAKkBE,G,EAAK;AACnB,mBAAOA,eAAe,IAAtB;AACH;;AAED;;;;;;;0CAIyBA,G,EAAK;AAC1B,mBAAO,KAAKC,UAAL,CAAgBD,GAAhB,KAAwB,KAAKE,OAAL,CAAaF,GAAb,CAA/B;AACH;;;;EAzFuB/B,kBAAkBuB,KAAlB,C;;QA4FpBR,a,GAAAA,a;kBACOA,a","file":"AbstractError.js","sourcesContent":["import Utility from '../Utility';\n\nfunction ExtendableBuiltin(cls){\n\n    function ExtendableBuiltin(){\n        cls.apply(this, arguments);\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype);\n\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n\n    return ExtendableBuiltin;\n}\n\n/**\n * @private\n * @param object\n * @return {*}\n */\nfunction optJson(object) {\n    if (!object) {\n        return undefined;\n    }\n\n    if (!Utility.isObject(object)) {\n        return undefined;\n    }\n\n    if (Utility.isFunction(object.toJSON)) {\n        return object.toJSON();\n    } else if (Utility.isFunction(object.toJson)) {\n        return object.toJson();\n    }\n\n    return undefined;\n}\n\n/**\n * @class\n */\nclass AbstractError extends ExtendableBuiltin(Error) {\n\n    /**\n     *\n     * @param {String|Object} options\n     */\n    constructor(options) {\n        if (Utility.isString(options)) {\n            let message = options;\n\n            options = { message: message };\n        } else if (Utility.isNullOrUndefined(options)) {\n            options = { message: 'Unknown Error' };\n        }\n\n        /**\n         * @type {String}\n         */\n        let message = Utility.take(options, 'message');\n        /**\n         * @type {AbstractError}\n         */\n        let cause = Utility.take(options, 'cause');\n        // let message = Utility.take(options, 'message', Utility.isString);\n\n        super(message);\n        \n        var error = Error.call(this, message);\n        // if (typeof Error.captureStackTrace === 'function') {\n        //     Error.captureStackTrace(this, this.constructor);\n        // } else {\n        //     this.stack = (new Error(message)).stack;\n        // }\n        this.stack = error.stack;\n        this.name = this.constructor.name;\n        this.message = message;\n        this._cause = cause;\n    }\n\n    get cause() {\n        return this._cause;\n    }\n\n    toJSON() {\n        return {\n            stack: this.stack,\n            name: this.name,\n            cause: optJson(this.cause),\n            message: this.message\n        };\n    }\n\n    /**\n     * Determines if a class definition is a subclass of CoreObject\n     *\n     * @param {*} clazz\n     * @returns {boolean}\n     */\n    static isClass(clazz) {\n        if ('function' !== typeof clazz) {\n            return false;\n        }\n\n        while (clazz) {\n            if (clazz === this) {\n                return true;\n            }\n\n            clazz = Object.getPrototypeOf(clazz);\n        }\n\n        return false;\n    }\n\n    /**\n     *\n     * @param {*} obj\n     * @returns {boolean}\n     */\n    static isInstance(obj) {\n        return obj instanceof this;\n    }\n\n    /**\n     * @param obj\n     * @returns {boolean}\n     */\n    static isInstanceOrClass(obj) {\n        return this.isInstance(obj) || this.isClass(obj);\n    }\n}\n\nexport {AbstractError};\nexport default AbstractError;"]}