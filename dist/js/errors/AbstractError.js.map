{"version":3,"sources":["../../../src/js/errors/AbstractError.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;;;;;AAEA,SAAS,iBAAT,CAA2B,GAA3B,EAA+B;;AAE3B,aAAS,iBAAT,GAA4B;AACxB,YAAI,KAAJ,CAAU,IAAV,EAAgB,SAAhB;AACH;;AAED,sBAAkB,SAAlB,GAA8B,OAAO,MAAP,CAAc,IAAI,SAAlB,CAA9B;;AAEA,WAAO,cAAP,CAAsB,iBAAtB,EAAyC,GAAzC;;AAEA,WAAO,iBAAP;AACH;;AAED;;;;IAGM,a;;;AAEF;;;;;AAIA,2BAAY,OAAZ,EAAqB;AAAA;;AACjB,YAAI,kBAAQ,QAAR,CAAiB,OAAjB,CAAJ,EAA+B;AAC3B,gBAAI,WAAU,OAAd;;AAEA,sBAAU,EAAE,SAAS,QAAX,EAAV;AACH,SAJD,MAIO,IAAI,kBAAQ,iBAAR,CAA0B,OAA1B,CAAJ,EAAwC;AAC3C,sBAAU,EAAE,SAAS,eAAX,EAAV;AACH;;AAED;;;AAGA,YAAI,UAAU,kBAAQ,IAAR,CAAa,OAAb,EAAsB,SAAtB,CAAd;AACA;;AAbiB,qGAeX,OAfW;;AAiBjB,YAAI,QAAQ,MAAM,IAAN,QAAiB,OAAjB,CAAZ;AACA;AACA;AACA;AACA;AACA;AACA,cAAK,KAAL,GAAa,MAAM,KAAnB;AACA,cAAK,IAAL,GAAY,MAAK,WAAL,CAAiB,IAA7B;AACA,cAAK,OAAL,GAAe,OAAf;AAzBiB;AA0BpB;;;;iCAEQ;AACL,mBAAO;AACH,uBAAO,KAAK,KADT;AAEH,sBAAM,KAAK,IAFR;AAGH,yBAAS,KAAK;AAHX,aAAP;AAKH;;AAED;;;;;;;;;gCAMe,K,EAAO;AAClB,gBAAI,eAAe,OAAO,KAA1B,EAAiC;AAC7B,uBAAO,KAAP;AACH;;AAED,mBAAO,KAAP,EAAc;AACV,oBAAI,UAAU,IAAd,EAAoB;AAChB,2BAAO,IAAP;AACH;;AAED,wBAAQ,OAAO,cAAP,CAAsB,KAAtB,CAAR;AACH;;AAED,mBAAO,KAAP;AACH;;AAED;;;;;;;;mCAKkB,G,EAAK;AACnB,mBAAO,eAAe,IAAtB;AACH;;AAED;;;;;;;0CAIyB,G,EAAK;AAC1B,mBAAO,KAAK,UAAL,CAAgB,GAAhB,KAAwB,KAAK,OAAL,CAAa,GAAb,CAA/B;AACH;;;;EA/EuB,kBAAkB,KAAlB,C;;kBAkFb,a","file":"AbstractError.js","sourcesContent":["import Utility from '../Utility';\n\nfunction ExtendableBuiltin(cls){\n\n    function ExtendableBuiltin(){\n        cls.apply(this, arguments);\n    }\n\n    ExtendableBuiltin.prototype = Object.create(cls.prototype);\n\n    Object.setPrototypeOf(ExtendableBuiltin, cls);\n\n    return ExtendableBuiltin;\n}\n\n/**\n * @class\n */\nclass AbstractError extends ExtendableBuiltin(Error) {\n\n    /**\n     *\n     * @param {String|Object} options\n     */\n    constructor(options) {\n        if (Utility.isString(options)) {\n            let message = options;\n\n            options = { message: message };\n        } else if (Utility.isNullOrUndefined(options)) {\n            options = { message: 'Unknown Error' };\n        }\n\n        /**\n         * @type {String}\n         */\n        let message = Utility.take(options, 'message');\n        // let message = Utility.take(options, 'message', Utility.isString);\n\n        super(message);\n        \n        var error = Error.call(this, message);\n        // if (typeof Error.captureStackTrace === 'function') {\n        //     Error.captureStackTrace(this, this.constructor);\n        // } else {\n        //     this.stack = (new Error(message)).stack;\n        // }\n        this.stack = error.stack;\n        this.name = this.constructor.name;\n        this.message = message;\n    }\n\n    toJSON() {\n        return {\n            stack: this.stack,\n            name: this.name,\n            message: this.message\n        };\n    }\n\n    /**\n     * Determines if a class definition is a subclass of CoreObject\n     *\n     * @param {*} clazz\n     * @returns {boolean}\n     */\n    static isClass(clazz) {\n        if ('function' !== typeof clazz) {\n            return false;\n        }\n\n        while (clazz) {\n            if (clazz === this) {\n                return true;\n            }\n\n            clazz = Object.getPrototypeOf(clazz);\n        }\n\n        return false;\n    }\n\n    /**\n     *\n     * @param {*} obj\n     * @returns {boolean}\n     */\n    static isInstance(obj) {\n        return obj instanceof this;\n    }\n\n    /**\n     * @param obj\n     * @returns {boolean}\n     */\n    static isInstanceOrClass(obj) {\n        return this.isInstance(obj) || this.isClass(obj);\n    }\n}\n\nexport default AbstractError;"]}