{"version":3,"sources":["../../../src/js/errors/Errors.js"],"names":[],"mappings":";;;;;;;;AAAA;;;;;;;;IAEM,M;;;;;;;;;;;;;;;qCAQkB,K,EAAO;AACvB,gBAAI,wBAAc,OAAd,CAAsB,KAAtB,CAAJ,EAAkC;AAC9B,uBAAO,IAAP;AACH;;AAED,gBAAI,eAAe,OAAO,KAA1B,EAAiC;AAC7B,uBAAO,KAAP;AACH;;AAED,mBAAO,KAAP,EAAc;AACV,oBAAI,UAAU,KAAd,EAAqB;AACjB,2BAAO,IAAP;AACH;;AAED,wBAAQ,OAAO,cAAP,CAAsB,KAAtB,CAAR;AACH;;AAED,mBAAO,KAAP;AACH;;;;;;;;;;;wCAQsB,M,EAAQ;AAC3B,mBAAO,kBAAkB,KAAlB,IAA2B,wBAAc,UAAd,CAAyB,MAAzB,CAAlC;AACH;;;;;;kBAGU,M","file":"Errors.js","sourcesContent":["import AbstractError from './AbstractError';\n\nclass Errors {\n\n    /**\n     * Determines if the given err object is an error class\n     *\n     * @param {*} clazz\n     * @returns {boolean}\n     */\n    static isErrorClass(clazz) {\n        if (AbstractError.isClass(clazz)) {\n            return true;\n        }\n\n        if ('function' !== typeof clazz) {\n            return false;\n        }\n\n        while (clazz) {\n            if (clazz === Error) {\n                return true;\n            }\n\n            clazz = Object.getPrototypeOf(clazz);\n        }\n\n        return false;\n    }\n\n    /**\n     * Determines if the given error is\n     *\n     * @param object\n     * @returns {boolean}\n     */\n    static isErrorInstance(object) {\n        return object instanceof Error || AbstractError.isInstance(object);\n    }\n}\n\nexport default Errors;"]}