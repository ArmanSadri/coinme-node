{"version":3,"sources":["../../../src/js/slack/AttachmentBuilder.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEM,iB;;;AAEF;;;;AAGA,+BAAY,OAAZ,EAAqB;AAAA;;AAAA,0GACR,SADQ;;AAGjB,cAAK,OAAL,GAAe,EAAf;;AAEA,cAAK,GAAL,CAAS,QAAT,EACK,WADL,GAEK,IAFL,CAEU,MAAK,GAAL,CAAS,SAAT,CAFV;;AAIA,cAAK,GAAL,CAAS,WAAT,EAAsB,CAAC,SAAD,EAAY,MAAZ,EAAoB,QAApB,CAAtB;AACA,cAAK,GAAL,CAAS,OAAT,EAAkB,MAAlB;AAViB;AAWpB;;AAED;;;;;;;;;8BAKM,K,EAAO;AACT,oCAAc,cAAd,CAA6B,KAA7B;;AAEA,iBAAK,GAAL,CAAS,OAAT,EAAkB,KAAlB;;AAEA,mBAAO,IAAP;AACH;;AAED;;;;;;;;8BAKM,M,EAAO;AACT,oCAAc,cAAd,CAA6B,MAA7B;;AAEA,iBAAK,GAAL,CAAS,OAAT,EAAkB,MAAlB;;AAEA,mBAAO,IAAP;AACH;;AAED;;;;;;;;6BAKK,K,EAAO;AACR,oCAAc,cAAd,CAA6B,KAA7B;;AAEA,iBAAK,GAAL,CAAS,MAAT,EAAiB,KAAjB;;AAEA,mBAAO,IAAP;AACH;;AAED;;;;;;gCAGQ;AACJ,mBAAO,2BAAiB,IAAjB,EACF,KADE,EAAP;AAEH;;AAED;;;;;;;iCAIS;AACL,mBAAO,KAAK,OAAZ;AACH;;;;;;kBAGU,iB","file":"AttachmentBuilder.js","sourcesContent":["'use strict';\n\nimport Preconditions from \"../Preconditions\";\nimport AbstractBuilder from \"../slack/AbstractBuilder\";\nimport FieldBuilder from \"../slack/FieldBuilder\";\n\nclass AttachmentBuilder extends AbstractBuilder {\n\n    /**\n     * @param {*} options\n     */\n    constructor(options) {\n        super(...arguments);\n\n        this._fields = [];\n\n        this.get('parent')\n            .attachments()\n            .push(this.get('payload'));\n\n        this.set('mrkdwn_in', ['pretext', 'text', 'fields']);\n        this.set('color', 'good');\n    }\n\n    /**\n     *\n     * @param {String} value\n     * @returns {AttachmentBuilder}\n     */\n    title(value) {\n        Preconditions.shouldBeString(value);\n\n        this.set('title', value);\n\n        return this;\n    }\n\n    /**\n     *\n     * @param color\n     * @returns {AttachmentBuilder}\n     */\n    color(color) {\n        Preconditions.shouldBeString(color);\n\n        this.set('color', color);\n\n        return this;\n    }\n\n    /**\n     *\n     * @param {String} value\n     * @returns {AttachmentBuilder}\n     */\n    text(value) {\n        Preconditions.shouldBeString(value);\n\n        this.set('text', value);\n\n        return this;\n    }\n\n    /**\n     * @returns {FieldBuilder}\n     */\n    field() {\n        return new FieldBuilder(this)\n            .small();\n    }\n\n    /**\n     *\n     * @returns {[]}\n     */\n    fields() {\n        return this._fields;\n    }\n}\n\nexport default AttachmentBuilder;\n"]}