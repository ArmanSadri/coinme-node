{"version":3,"sources":["../../../src/js/slack/AbstractNotificationTemplate.js"],"names":["AbstractNotificationTemplate","arguments","builder","data","result","applyTemplate","resolve","silly","Error"],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;;IAIMA,4B;;;AAEF,4CAAc;AAAA;;AAAA,4JACDC,SADC;;AAGV;AACA;AACA;;AAEA;AACH;;AAED;;;;;;;;;;+BAMOC,O,EAASC,I,EAAM;AAClB;AACA,gBAAIC,SAAS,KAAKC,aAAL,CAAmBH,OAAnB,EAA4BC,IAA5B,CAAb;;AAEAC,qBAASA,UAAUF,OAAnB;;AAEA,mBAAO,mBAAQI,OAAR,CAAgBF,MAAhB,CAAP;AACH;;AAED;;;;;;;;;;sCAOcF,O,EAASC,I,EAAM;AACzB,8BAAOI,KAAP,CAAa,SAAb,EAAwBL,OAAxB;AACA,8BAAOK,KAAP,CAAa,MAAb,EAAqBJ,IAArB;;AAEA,kBAAM,IAAIK,KAAJ,CAAU,8CAAV,CAAN;AACH;;;;;;kBAIUR,4B","file":"AbstractNotificationTemplate.js","sourcesContent":["'use strict';\n\nimport Logger from \"winston\";\nimport CoreObject from \"~/CoreObject\";\nimport NotificationBuilder from \"~/slack/NotificationBuilder\";\nimport Promise from 'bluebird';\n\n/**\n *\n * This class is intended to be instantiated early and (generally) once in your app.\n */\nclass AbstractNotificationTemplate extends CoreObject {\n\n    constructor() {\n        super(...arguments);\n\n        // Utility.defaults(this, {\n        //     name: 'NotificationTemplate'\n        // });\n\n        // Preconditions.shouldBeString(Ember.get(this, 'name'), 'You must define a name for this template');\n    }\n\n    /**\n     * @public\n     * @param {NotificationBuilder} builder\n     * @param {*|undefined} data\n     * @returns {Promise}\n     */\n    render(builder, data) {\n        // Apply the template. Might be a promise though.\n        let result = this.applyTemplate(builder, data);\n\n        result = result || builder;\n\n        return Promise.resolve(result);\n    }\n\n    /**\n     *\n     * @protected\n     * @param {NotificationBuilder} builder\n     * @param {Object} data\n     * @return {Promise|NotificationBuilder|Object}\n     */\n    applyTemplate(builder, data) {\n        Logger.silly('Builder', builder);\n        Logger.silly('Data', data);\n\n        throw new Error('This method must be overridden by a subclass');\n    }\n\n}\n\nexport default AbstractNotificationTemplate;"]}