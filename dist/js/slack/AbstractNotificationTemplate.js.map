{"version":3,"sources":["../../../src/js/slack/AbstractNotificationTemplate.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;;;;;;IAMM;;;AAEF,aAFE,4BAEF,GAAc;8BAFZ,8BAEY;;sEAFZ,0CAGW;;;;;;;AADC,KAAd;;;;;;;;;;iBAFE;;+BAkBK,SAAS,MAAM;;AAElB,gBAAI,SAAS,KAAK,aAAL,CAAmB,OAAnB,EAA4B,IAA5B,CAAT,CAFc;;AAIlB,qBAAS,UAAU,OAAV,CAJS;;AAMlB,mBAAO,MAAP,CANkB;;;;;;;;;;;;;sCAgBR,SAAS,MAAM;AACzB,8BAAO,KAAP,CAAa,SAAb,EAAwB,OAAxB,EADyB;AAEzB,8BAAO,KAAP,CAAa,MAAb,EAAqB,IAArB,EAFyB;;AAIzB,kBAAM,IAAI,KAAJ,CAAU,8CAAV,CAAN,CAJyB;;;;WAlC3B;;;kBA2CS","file":"AbstractNotificationTemplate.js","sourcesContent":["'use strict';\n\nimport Logger from \"winston\";\nimport CoreObject from \"~/CoreObject\";\nimport Ember from '~/ember';\nimport Utility from \"~/Utility\";\nimport NotificationBuilder from \"~/slack/NotificationBuilder\";\nimport Preconditions from \"~/Preconditions\";\n\n/**\n *\n * This class is intended to be instantiated early and (generally) once in your app.\n */\nclass AbstractNotificationTemplate extends CoreObject {\n\n    constructor() {\n        super(...arguments);\n\n        // Utility.defaults(this, {\n        //     name: 'NotificationTemplate'\n        // });\n        \n        // Preconditions.shouldBeString(Ember.get(this, 'name'), 'You must define a name for this template');\n    }\n\n    /**\n     * @public\n     * @param {NotificationBuilder} builder\n     * @param {*|undefined} data\n     * @returns {Promise}\n     */\n    render(builder, data) {\n        // Apply the template. Might be a promise though.\n        var result = this.applyTemplate(builder, data);\n\n        result = result || builder;\n\n        return result;\n    }\n\n    /**\n     *\n     * @protected\n     * @param {NotificationBuilder} builder\n     * @param {Object} data\n     * @return {Promise|NotificationBuilder|Object}\n     */\n    applyTemplate(builder, data) {\n        Logger.silly('Builder', builder);\n        Logger.silly('Data', data);\n\n        throw new Error('This method must be overridden by a subclass');\n    }\n\n}\n\nexport default AbstractNotificationTemplate;"]}