{"version":3,"sources":["../../../src/js/slack/FieldBuilder.js"],"names":[],"mappings":"AAAA;;;;;;;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEM,Y;;;AAEF;;;;;AAIA,0BAAY,OAAZ,EAAqB;AAAA;;AACjB,gCAAc,cAAd,CAA6B,OAA7B,EAAsC,kDAAtC;;AAEA;;;AAGA,YAAI,SAAS,kBAAQ,IAAR,CAAa,OAAb,EAAsB,QAAtB,EAAgC;AACzC,6CADyC;AAEzC,sBAAU;AAF+B,SAAhC,CAAb;;AANiB,oGAWX,OAXW;;AAajB,cAAK,OAAL,GAAe,MAAf;;AAEA,cAAK,MAAL,CACK,MADL,GAEK,IAFL,CAEU,MAAK,OAFf;AAfiB;AAkBpB;;AAED;;;;;;;;;AAOA;;;;8BAIM,K,EAAO;AACT,oCAAc,cAAd,CAA6B,KAA7B;;AAEA,mBAAO,KAAK,gBAAL,CAAsB;AACzB,uBAAO;AADkB,aAAtB,CAAP;AAGH;;AAED;;;;;;;6BAIK,K,EAAO;AACR,mBAAO,KAAK,gBAAL,CAAsB;AACzB,uBAAO;AADkB,aAAtB,CAAP;AAGH;;AAED;;;;;;;gCAIQ;AACJ,mBAAO,KAAK,gBAAL,CAAsB;AACzB,uBAAO;AADkB,aAAtB,CAAP;AAGH;;AAED;;;;;;;;4BAKI,W,EAAa;AACb,gBAAI,KAAK,KAAK,GAAL,CAAS,eAAT,KAA6B,EAAtC;;AAEA;AACI,6BAAY,WAAZ;AACH;;AAED,mBAAO,KAAK,IAAL,CAAU,EAAV,CAAP;AACH;;AAED;;;;;;;;;wCAMgB,G,EAAK,K,EAAO;AACxB,gBAAI,KAAK,KAAK,GAAL,CAAS,eAAT,KAA6B,EAAtC;;AAEA;AACI,8BAAa,GAAb,WAAsB,KAAtB;AACH;;AAED,mBAAO,KAAK,IAAL,CAAU,EAAV,CAAP;AACH;;;4BAjEY;AACT,mBAAO,KAAK,OAAZ;AACH;;;;;;kBAkEU,Y","file":"FieldBuilder.js","sourcesContent":["'use strict';\n\nimport AbstractBuilder from \"../slack/AbstractBuilder\";\nimport AttachmentBuilder from \"../slack/AttachmentBuilder\";\nimport Preconditions from \"../Preconditions\";\nimport Utility from \"../Utility\";\n\nclass FieldBuilder extends AbstractBuilder {\n\n    /**\n     *\n     * @param {{parent: AttachmentBuilder}} options\n     */\n    constructor(options) {\n        Preconditions.shouldBeObject(options, 'FieldBuilder constructor requires configuration.');\n\n        /**\n         * @type {AttachmentBuilder}\n         */\n        let parent = Utility.take(options, 'parent', {\n            type: AttachmentBuilder,\n            required: true\n        });\n\n        super(options);\n\n        this._parent = parent;\n\n        this.parent\n            .fields()\n            .push(this.payload);\n    }\n\n    /**\n     * @returns {AttachmentBuilder}\n     */\n    get parent() {\n        return this._parent;\n    }\n\n    /**\n     * @param {String} value\n     * @returns {FieldBuilder}\n     */\n    title(value) {\n        Preconditions.shouldBeString(value);\n\n        return this.mergeIntoPayload({\n            title: value\n        });\n    }\n\n    /**\n     * @param {String} value\n     * @returns {FieldBuilder}\n     */\n    text(value) {\n        return this.mergeIntoPayload({\n            value: value\n        });\n    }\n\n    /**\n     *\n     * @returns {FieldBuilder}\n     */\n    small() {\n        return this.mergeIntoPayload({\n            short: true\n        });\n    }\n\n    /**\n     *\n     * @param {String} stringToAdd\n     * @returns {FieldBuilder}\n     */\n    add(stringToAdd) {\n        var sb = this.get('payload.value') || '';\n\n        {\n            sb += (`\\n${stringToAdd}`);\n        }\n\n        return this.text(sb);\n    }\n\n    /**\n     *\n     * @param {String} key\n     * @param {String} value\n     * @returns {FieldBuilder}\n     */\n    addKeyValuePair(key, value) {\n        var sb = this.get('payload.value') || '';\n\n        {\n            sb += (`\\n_${key}:_ ${value}`);\n        }\n\n        return this.text(sb);\n    }\n}\n\nexport default FieldBuilder;\n"]}