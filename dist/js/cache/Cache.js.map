{"version":3,"sources":["../../../src/js/cache/Cache.js"],"names":["Cache","options","shouldBeAbstract","new","target","path","scope","resolve","then","startedLatch","getPath","_startedLatch"],"mappings":";;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;AAEA;;;;;IAKMA,K;;;AAQF;AACA,mBAAYC,OAAZ,EAAqB;AAAA;;AAAA,kHACXA,OADW;;AAGjB,gCAAcC,gBAAd,CAA+BC,IAAIC,MAAnC,EAA2CJ,KAA3C;AAHiB;AAIpB;;AAED;;AAEA;AACA;;;;;;;AAhBA;;;;;;;;;;AAyBA;;AAEA;;;;;6BAKKK,I,EAAM;AACP,gBAAIC,QAAQ,IAAZ;;AAEA,mBAAO,mBAAQC,OAAR,GACFC,IADE,CACG;AAAA,uBAAMF,MAAMG,YAAZ;AAAA,aADH,EAEFD,IAFE,CAEG,YAAM;AACR,uBAAO,kBAAQE,OAAR,CAAgBL,IAAhB,CAAP;AACH,aAJE,CAAP;AAKH;;;4BAnBkB;AACf,mBAAO,KAAKM,aAAZ;AACH;;;;;;QAoBGX,K,GAAAA,K;kBACOA,K","file":"Cache.js","sourcesContent":["import CoreObject from \"../CoreObject\";\r\nimport Utility from \"../Utility\";\r\nimport URI from \"urijs\";\r\nimport Preconditions from \"../Preconditions\";\r\nimport Promise from \"bluebird\";\r\n\r\n/**\r\n * @class Cache\r\n * @extends CoreObject\r\n * @abstract\r\n */\r\nclass Cache extends CoreObject {\r\n\r\n    /**\r\n     * @protected\r\n     * @type {Promise}\r\n     */\r\n    _startedLatch;\r\n\r\n    //region constructor\r\n    constructor(options) {\r\n        super(options);\r\n\r\n        Preconditions.shouldBeAbstract(new.target, Cache);\r\n    }\r\n\r\n    //endregion\r\n\r\n    //region getters/setters\r\n    /**\r\n     * @readonly\r\n     * @property\r\n     * @return {Promise}\r\n     */\r\n    get startedLatch() {\r\n        return this._startedLatch;\r\n    }\r\n\r\n    //endregion\r\n\r\n    /**\r\n     * @abstract\r\n     * @param {String|URI} path\r\n     * @return {Promise}\r\n     */\r\n    read(path) {\r\n        let scope = this;\r\n\r\n        return Promise.resolve()\r\n            .then(() => scope.startedLatch)\r\n            .then(() => {\r\n                return Utility.getPath(path);\r\n            });\r\n    }\r\n}\r\n\r\nexport {Cache}\r\nexport default Cache;"]}